{"version":3,"file":"708.app.js","mappings":";;;;;;;;;;;;AAAO;AACP;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;EClHA;;;;;EAAA;EAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAAA,mCAwOkBA,WAAM,CAAC,KAAK,CAAC,KAAK;;IAxOpC,mCAyO2BC,UAAK;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AEzO2C;AAC3E;;AAEA,CAAwG;AACxG,iCAAiC,+BAAe,uBAAuB,SAAS;;AAEhF,gDAAe","sources":["webpack://blog-demo/./docs/.vuepress/.temp/pages/Vue/vuex入门.html.js","webpack://blog-demo/./docs/.vuepress/.temp/pages/Vue/vuex入门.html.vue","webpack://blog-demo/./docs/.vuepress/.temp/pages/Vue/vuex入门.html.vue?3f35","webpack://blog-demo/./docs/.vuepress/.temp/pages/Vue/vuex入门.html.vue?57d0"],"sourcesContent":["export const data = {\n  \"key\": \"v-c11452c2\",\n  \"path\": \"/Vue/vuex%E5%85%A5%E9%97%A8.html\",\n  \"title\": \"vuex 概述\",\n  \"lang\": \"zh-CN\",\n  \"frontmatter\": {},\n  \"excerpt\": \"\",\n  \"headers\": [\n    {\n      \"level\": 2,\n      \"title\": \"回顾-组件之间共享状态 (组件通信方案)\",\n      \"slug\": \"回顾-组件之间共享状态-组件通信方案\",\n      \"children\": []\n    },\n    {\n      \"level\": 2,\n      \"title\": \"vuex基本概念\",\n      \"slug\": \"vuex基本概念\",\n      \"children\": []\n    },\n    {\n      \"level\": 2,\n      \"title\": \"vuex的优点: 方便的解决多组件的共享状态\",\n      \"slug\": \"vuex的优点-方便的解决多组件的共享状态\",\n      \"children\": []\n    },\n    {\n      \"level\": 2,\n      \"title\": \"什么数据适合存到vuex中\",\n      \"slug\": \"什么数据适合存到vuex中\",\n      \"children\": []\n    },\n    {\n      \"level\": 2,\n      \"title\": \"概述小结:\",\n      \"slug\": \"概述小结\",\n      \"children\": []\n    },\n    {\n      \"level\": 2,\n      \"title\": \"需求: 多组件共享数据\",\n      \"slug\": \"需求-多组件共享数据\",\n      \"children\": []\n    },\n    {\n      \"level\": 2,\n      \"title\": \"vuex 的使用 - 创建仓库\",\n      \"slug\": \"vuex-的使用-创建仓库\",\n      \"children\": []\n    },\n    {\n      \"level\": 2,\n      \"title\": \"核心概念 - state 状态\",\n      \"slug\": \"核心概念-state-状态\",\n      \"children\": []\n    },\n    {\n      \"level\": 2,\n      \"title\": \"核心概念 - mutations\",\n      \"slug\": \"核心概念-mutations\",\n      \"children\": [\n        {\n          \"level\": 3,\n          \"title\": \"基本使用\",\n          \"slug\": \"基本使用\",\n          \"children\": []\n        },\n        {\n          \"level\": 3,\n          \"title\": \"带参数的 mutation\",\n          \"slug\": \"带参数的-mutation\",\n          \"children\": []\n        },\n        {\n          \"level\": 3,\n          \"title\": \"辅助函数 - mapMutations\",\n          \"slug\": \"辅助函数-mapmutations\",\n          \"children\": []\n        }\n      ]\n    },\n    {\n      \"level\": 2,\n      \"title\": \"核心概念-actions\",\n      \"slug\": \"核心概念-actions\",\n      \"children\": []\n    },\n    {\n      \"level\": 2,\n      \"title\": \"核心概念-getters\",\n      \"slug\": \"核心概念-getters\",\n      \"children\": []\n    },\n    {\n      \"level\": 2,\n      \"title\": \"核心概念 - 模块 module (进阶拓展)\",\n      \"slug\": \"核心概念-模块-module-进阶拓展\",\n      \"children\": [\n        {\n          \"level\": 3,\n          \"title\": \"模块定义 - 准备 state\",\n          \"slug\": \"模块定义-准备-state\",\n          \"children\": []\n        },\n        {\n          \"level\": 3,\n          \"title\": \"命名空间 namespaced\",\n          \"slug\": \"命名空间-namespaced\",\n          \"children\": []\n        }\n      ]\n    }\n  ],\n  \"git\": {}\n}\n","<h1 id=\"vuex-概述\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#vuex-概述\" aria-hidden=\"true\">#</a> vuex 概述</h1>\n<p>目标：</p>\n<ul>\n<li>了解vuex的应用场景  (在哪用)</li>\n<li>掌握vuex的基本使用  (怎么用)</li>\n</ul>\n<p><strong>vuex 是一个 vue 的状态管理工具,  状态就是数据</strong></p>\n<p>vuex是一个插件工具，可以帮我们vue管理通用的数据</p>\n<p>之前如果要进行跨组件的数据通信  =&gt;  父传子，子传父  =&gt;  一旦组件关系复杂，数据非常难以维护</p>\n<h2 id=\"回顾-组件之间共享状态-组件通信方案\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#回顾-组件之间共享状态-组件通信方案\" aria-hidden=\"true\">#</a> 回顾-组件之间共享状态 (组件通信方案)</h2>\n<p>默认组件的数据, 是独立的, 每个组件有着自己的状态(数据)</p>\n<blockquote>\n<p>状态 === 数据</p>\n</blockquote>\n<p>组件之间共享状态的两种典型方式：</p>\n<ul>\n<li>\n<p>父子之间 : props + $emit</p>\n<p>父传子：props属性绑定</p>\n<div class=\"language-text ext-text line-numbers-mode\"><pre v-pre class=\"language-text\"><code>&lt;son1 msg=\"msg\">&lt;/son1>\n</code></pre><div class=\"line-numbers\"><span class=\"line-number\">1</span><br></div></div><p>子传父：$emit事件绑定</p>\n<div class=\"language-text ext-text line-numbers-mode\"><pre v-pre class=\"language-text\"><code>&lt;div>\n\t&lt;button @click=\"$emit('event-name')\">通知父组件&lt;/button>\n&lt;/div>\n</code></pre><div class=\"line-numbers\"><span class=\"line-number\">1</span><br><span class=\"line-number\">2</span><br><span class=\"line-number\">3</span><br></div></div></li>\n</ul>\n<p>如果某个状态需要在很多个组件来使用，或者要实现多个组件共同维护一份数据又应该怎么做呢 ？</p>\n<p>这里就要引入Vuex了。</p>\n<h2 id=\"vuex基本概念\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#vuex基本概念\" aria-hidden=\"true\">#</a> vuex基本概念</h2>\n<p><a href=\"https://vuex.vuejs.org/zh/guide/\" target=\"_blank\" rel=\"noopener noreferrer\">中文文档<ExternalLinkIcon/></a></p>\n<p>vuex是vue的状态管理工具，<strong>状态即数据</strong>。 状态管理就是集中管理vue中 <strong>通用的</strong> 一些数据</p>\n<p>注意（官方原文）：</p>\n<ul>\n<li>不是所有的场景都适用于vuex，只有在必要的时候才使用vuex</li>\n<li>使用了vuex之后，会附加更多的框架中的概念进来，增加了项目的复杂度  （数据的操作更便捷，数据的流动更清晰）</li>\n</ul>\n<p>Vuex就像《近视眼镜》, 你自然会知道什么时候需要用它~</p>\n<h2 id=\"vuex的优点-方便的解决多组件的共享状态\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#vuex的优点-方便的解决多组件的共享状态\" aria-hidden=\"true\">#</a> vuex的优点: 方便的解决多组件的共享状态</h2>\n<p>vuex的作用是解决《多组件状态共享》的问题。</p>\n<ul>\n<li>\n<p>它是独立于组件而单独存在的，所有的组件都可以把它当作  <strong>一座桥梁</strong> 来进行通讯。</p>\n</li>\n<li>\n<p>特点：</p>\n<ul>\n<li><strong>响应式</strong>： 只要仓库一变化，其他所有地方都更新 （太爽了！！！）</li>\n<li>操作更简洁</li>\n</ul>\n<p>代码量非常少, 但是需要熟悉</p>\n</li>\n</ul>\n<h2 id=\"什么数据适合存到vuex中\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#什么数据适合存到vuex中\" aria-hidden=\"true\">#</a> 什么数据适合存到vuex中</h2>\n<p>一般情况下，只有  <strong>多个组件均需要共享的数据</strong> ，才有必要存储在vuex中，</p>\n<p>对于某个组件中的私有数据，依旧存储在组件自身的data中。</p>\n<p>例如：</p>\n<ul>\n<li>对于所有组件而言，当前登陆的   <strong>用户信息</strong>  是需要在全体组件之间共享的，则它可以放在vuex中</li>\n<li>对于文章详情页组件来说，当前的用户浏览的文章列表数据则应该属于这个组件的私有数据，应该要放在这个组件data中。</li>\n</ul>\n<h2 id=\"概述小结\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#概述小结\" aria-hidden=\"true\">#</a> 概述小结:</h2>\n<ol>\n<li>vuex解决什么问题?   vuex 能解决  <strong>多组件共享数据</strong>  的问题,  非常方便便捷</li>\n<li>什么样的数据, 适合存放到vuex?   多组件的  <strong>通用</strong>  的共用数据, 适合存到 vuex</li>\n</ol>\n<p>vuex 两大优势:</p>\n<ol>\n<li>响应式变化</li>\n<li>操作简洁  (vuex提供了一些简化语法的辅助函数, 这些辅助函数, 需要熟练掌握)</li>\n</ol>\n<h1 id=\"vuex入门\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#vuex入门\" aria-hidden=\"true\">#</a> vuex入门</h1>\n<h2 id=\"需求-多组件共享数据\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#需求-多组件共享数据\" aria-hidden=\"true\">#</a> 需求: 多组件共享数据</h2>\n<p>对于如下三个组件（一个父组件，两个子组件）</p>\n<p>效果是三个组件共享一份数据:</p>\n<ul>\n<li>任意一个组件都可以修改数据</li>\n<li>三个组件的数据是同步的</li>\n</ul>\n<p>1 创建项目</p>\n<div class=\"language-text ext-text line-numbers-mode\"><pre v-pre class=\"language-text\"><code>vue create vuex-demo\n</code></pre><div class=\"line-numbers\"><span class=\"line-number\">1</span><br></div></div><p>2 创建三个组件, 目录如下</p>\n<div class=\"language-text ext-text line-numbers-mode\"><pre v-pre class=\"language-text\"><code>|-components\n|--add-item.vue\n|--sub-item.vue\n|-App.vue\n</code></pre><div class=\"line-numbers\"><span class=\"line-number\">1</span><br><span class=\"line-number\">2</span><br><span class=\"line-number\">3</span><br><span class=\"line-number\">4</span><br></div></div><p>3 源代码如下</p>\n<p><code>App.vue</code>在入口组件中引入add-item和sub-item这两个子组件</p>\n<div class=\"language-html ext-html line-numbers-mode\"><pre v-pre class=\"language-html\"><code><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>template</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>app<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h1</span><span class=\"token punctuation\">></span></span>根组件<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h1</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>text<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>add-item</span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>add-item</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>hr</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>sub-item</span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>sub-item</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>template</span><span class=\"token punctuation\">></span></span>\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span><span class=\"token punctuation\">></span></span><span class=\"token script\"><span class=\"token language-javascript\">\n<span class=\"token keyword\">import</span> AddItem <span class=\"token keyword\">from</span> <span class=\"token string\">'./components/add-item.vue'</span>\n<span class=\"token keyword\">import</span> SubItem <span class=\"token keyword\">from</span> <span class=\"token string\">'./components/sub-item.vue'</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token literal-property property\">name</span><span class=\"token operator\">:</span> <span class=\"token string\">'app'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token function-variable function\">data</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span>\n      \n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">components</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    AddItem<span class=\"token punctuation\">,</span>\n    SubItem\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span>\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>style</span><span class=\"token punctuation\">></span></span><span class=\"token style\"><span class=\"token language-css\">\n<span class=\"token selector\">#app</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">width</span><span class=\"token punctuation\">:</span> 600px<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">margin</span><span class=\"token punctuation\">:</span> 20px auto<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">border</span><span class=\"token punctuation\">:</span> 3px solid #ccc<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">border-radius</span><span class=\"token punctuation\">:</span> 3px<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">padding</span><span class=\"token punctuation\">:</span> 10px<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>style</span><span class=\"token punctuation\">></span></span>\n</code></pre><div class=\"line-numbers\"><span class=\"line-number\">1</span><br><span class=\"line-number\">2</span><br><span class=\"line-number\">3</span><br><span class=\"line-number\">4</span><br><span class=\"line-number\">5</span><br><span class=\"line-number\">6</span><br><span class=\"line-number\">7</span><br><span class=\"line-number\">8</span><br><span class=\"line-number\">9</span><br><span class=\"line-number\">10</span><br><span class=\"line-number\">11</span><br><span class=\"line-number\">12</span><br><span class=\"line-number\">13</span><br><span class=\"line-number\">14</span><br><span class=\"line-number\">15</span><br><span class=\"line-number\">16</span><br><span class=\"line-number\">17</span><br><span class=\"line-number\">18</span><br><span class=\"line-number\">19</span><br><span class=\"line-number\">20</span><br><span class=\"line-number\">21</span><br><span class=\"line-number\">22</span><br><span class=\"line-number\">23</span><br><span class=\"line-number\">24</span><br><span class=\"line-number\">25</span><br><span class=\"line-number\">26</span><br><span class=\"line-number\">27</span><br><span class=\"line-number\">28</span><br><span class=\"line-number\">29</span><br><span class=\"line-number\">30</span><br><span class=\"line-number\">31</span><br><span class=\"line-number\">32</span><br><span class=\"line-number\">33</span><br><span class=\"line-number\">34</span><br><span class=\"line-number\">35</span><br><span class=\"line-number\">36</span><br><span class=\"line-number\">37</span><br></div></div><p><code>main.js</code></p>\n<div class=\"language-javascript ext-js line-numbers-mode\"><pre v-pre class=\"language-javascript\"><code><span class=\"token keyword\">import</span> Vue <span class=\"token keyword\">from</span> <span class=\"token string\">'vue'</span>\n<span class=\"token keyword\">import</span> App <span class=\"token keyword\">from</span> <span class=\"token string\">'./App.vue'</span>\n\nVue<span class=\"token punctuation\">.</span>config<span class=\"token punctuation\">.</span>productionTip <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span>\n\n<span class=\"token keyword\">new</span> <span class=\"token class-name\">Vue</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  <span class=\"token function-variable function\">render</span><span class=\"token operator\">:</span> <span class=\"token parameter\">h</span> <span class=\"token operator\">=></span> <span class=\"token function\">h</span><span class=\"token punctuation\">(</span>App<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">$mount</span><span class=\"token punctuation\">(</span><span class=\"token string\">'#app'</span><span class=\"token punctuation\">)</span>\n</code></pre><div class=\"line-numbers\"><span class=\"line-number\">1</span><br><span class=\"line-number\">2</span><br><span class=\"line-number\">3</span><br><span class=\"line-number\">4</span><br><span class=\"line-number\">5</span><br><span class=\"line-number\">6</span><br><span class=\"line-number\">7</span><br><span class=\"line-number\">8</span><br></div></div><p><code>sub-item.vue</code></p>\n<div class=\"language-html ext-html line-numbers-mode\"><pre v-pre class=\"language-html\"><code><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>template</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>box<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h2</span><span class=\"token punctuation\">></span></span>子组件 sub<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h2</span><span class=\"token punctuation\">></span></span>\n    从vuex中获取的值: <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>label</span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>label</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>br</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span><span class=\"token punctuation\">></span></span>值-1<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>template</span><span class=\"token punctuation\">></span></span>\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span><span class=\"token punctuation\">></span></span><span class=\"token script\"><span class=\"token language-javascript\">\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token literal-property property\">name</span><span class=\"token operator\">:</span> <span class=\"token string\">'SubItem'</span>\n<span class=\"token punctuation\">}</span>\n</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span>\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>style</span> <span class=\"token attr-name\">lang</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>css<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">scoped</span><span class=\"token punctuation\">></span></span><span class=\"token style\"><span class=\"token language-css\">\n<span class=\"token selector\">.box</span><span class=\"token punctuation\">{</span>\n  <span class=\"token property\">border</span><span class=\"token punctuation\">:</span> 3px solid #ccc<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">width</span><span class=\"token punctuation\">:</span> 400px<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">padding</span><span class=\"token punctuation\">:</span> 10px<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">margin</span><span class=\"token punctuation\">:</span> 20px<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token selector\">h2</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">margin-top</span><span class=\"token punctuation\">:</span> 10px<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>style</span><span class=\"token punctuation\">></span></span>\n\n</code></pre><div class=\"line-numbers\"><span class=\"line-number\">1</span><br><span class=\"line-number\">2</span><br><span class=\"line-number\">3</span><br><span class=\"line-number\">4</span><br><span class=\"line-number\">5</span><br><span class=\"line-number\">6</span><br><span class=\"line-number\">7</span><br><span class=\"line-number\">8</span><br><span class=\"line-number\">9</span><br><span class=\"line-number\">10</span><br><span class=\"line-number\">11</span><br><span class=\"line-number\">12</span><br><span class=\"line-number\">13</span><br><span class=\"line-number\">14</span><br><span class=\"line-number\">15</span><br><span class=\"line-number\">16</span><br><span class=\"line-number\">17</span><br><span class=\"line-number\">18</span><br><span class=\"line-number\">19</span><br><span class=\"line-number\">20</span><br><span class=\"line-number\">21</span><br><span class=\"line-number\">22</span><br><span class=\"line-number\">23</span><br><span class=\"line-number\">24</span><br><span class=\"line-number\">25</span><br><span class=\"line-number\">26</span><br><span class=\"line-number\">27</span><br></div></div><p><code>add-item.vue</code></p>\n<div class=\"language-html ext-html line-numbers-mode\"><pre v-pre class=\"language-html\"><code><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>template</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>box<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h2</span><span class=\"token punctuation\">></span></span>子组件 add<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h2</span><span class=\"token punctuation\">></span></span>\n    从vuex中获取的值:<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>label</span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>label</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>br</span> <span class=\"token punctuation\">/></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span><span class=\"token punctuation\">></span></span>值+1<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>template</span><span class=\"token punctuation\">></span></span>\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span><span class=\"token punctuation\">></span></span><span class=\"token script\"><span class=\"token language-javascript\">\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token literal-property property\">name</span><span class=\"token operator\">:</span> <span class=\"token string\">'AddItem'</span>\n<span class=\"token punctuation\">}</span>\n</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span>\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>style</span> <span class=\"token attr-name\">lang</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>css<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">scoped</span><span class=\"token punctuation\">></span></span><span class=\"token style\"><span class=\"token language-css\">\n<span class=\"token selector\">.box</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">border</span><span class=\"token punctuation\">:</span> 3px solid #ccc<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">width</span><span class=\"token punctuation\">:</span> 400px<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">padding</span><span class=\"token punctuation\">:</span> 10px<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">margin</span><span class=\"token punctuation\">:</span> 20px<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token selector\">h2</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">margin-top</span><span class=\"token punctuation\">:</span> 10px<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>style</span><span class=\"token punctuation\">></span></span>\n</code></pre><div class=\"line-numbers\"><span class=\"line-number\">1</span><br><span class=\"line-number\">2</span><br><span class=\"line-number\">3</span><br><span class=\"line-number\">4</span><br><span class=\"line-number\">5</span><br><span class=\"line-number\">6</span><br><span class=\"line-number\">7</span><br><span class=\"line-number\">8</span><br><span class=\"line-number\">9</span><br><span class=\"line-number\">10</span><br><span class=\"line-number\">11</span><br><span class=\"line-number\">12</span><br><span class=\"line-number\">13</span><br><span class=\"line-number\">14</span><br><span class=\"line-number\">15</span><br><span class=\"line-number\">16</span><br><span class=\"line-number\">17</span><br><span class=\"line-number\">18</span><br><span class=\"line-number\">19</span><br><span class=\"line-number\">20</span><br><span class=\"line-number\">21</span><br><span class=\"line-number\">22</span><br><span class=\"line-number\">23</span><br><span class=\"line-number\">24</span><br><span class=\"line-number\">25</span><br><span class=\"line-number\">26</span><br></div></div><h2 id=\"vuex-的使用-创建仓库\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#vuex-的使用-创建仓库\" aria-hidden=\"true\">#</a> vuex 的使用 - 创建仓库</h2>\n<p>1 安装 vuex, 与vue-router类似，vuex是一个独立存在的插件，如果脚手架初始化没有选 vuex，就需要额外安装。</p>\n<div class=\"language-text ext-text line-numbers-mode\"><pre v-pre class=\"language-text\"><code>yarn add vuex@3.4.0\n</code></pre><div class=\"line-numbers\"><span class=\"line-number\">1</span><br></div></div><p>2 新建 <code>store/index.js</code> 专门存放 vuex</p>\n<p>​\t为了维护项目目录的整洁，在src目录下新建一个store目录其下放置一个index.js文件。 (和 <code>router/index.js</code> 类似)</p>\n<p>​\t<img src=\"https://ooszy.cco.vin/img/blog-public/ljz.gif\" alt=\"image-20201029064100611\" originSrc=\"images/image-20201029064100611.png\" data=\"aurora\"></p>\n<p>3 创建仓库 <code>store/index.js</code></p>\n<div class=\"language-jsx ext-jsx line-numbers-mode\"><pre v-pre class=\"language-jsx\"><code><span class=\"token comment\">// 导入 vue</span>\n<span class=\"token keyword\">import</span> Vue <span class=\"token keyword\">from</span> <span class=\"token string\">'vue'</span>\n<span class=\"token comment\">// 导入 vuex</span>\n<span class=\"token keyword\">import</span> Vuex <span class=\"token keyword\">from</span> <span class=\"token string\">'vuex'</span>\n<span class=\"token comment\">// vuex也是vue的插件, 需要use一下, 进行插件的安装初始化</span>\nVue<span class=\"token punctuation\">.</span><span class=\"token function\">use</span><span class=\"token punctuation\">(</span>Vuex<span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\">// 创建仓库 store</span>\n<span class=\"token keyword\">const</span> store <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Vuex<span class=\"token punctuation\">.</span>Store</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\">// 导出仓库</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> store\n</code></pre><div class=\"line-numbers\"><span class=\"line-number\">1</span><br><span class=\"line-number\">2</span><br><span class=\"line-number\">3</span><br><span class=\"line-number\">4</span><br><span class=\"line-number\">5</span><br><span class=\"line-number\">6</span><br><span class=\"line-number\">7</span><br><span class=\"line-number\">8</span><br><span class=\"line-number\">9</span><br><span class=\"line-number\">10</span><br><span class=\"line-number\">11</span><br><span class=\"line-number\">12</span><br></div></div><p>4 在 main.js 中导入挂载到 Vue 实例上</p>\n<div class=\"language-javascript ext-js line-numbers-mode\"><pre v-pre class=\"language-javascript\"><code><span class=\"token keyword\">import</span> Vue <span class=\"token keyword\">from</span> <span class=\"token string\">'vue'</span>\n<span class=\"token keyword\">import</span> App <span class=\"token keyword\">from</span> <span class=\"token string\">'./App.vue'</span>\n<span class=\"token keyword\">import</span> store <span class=\"token keyword\">from</span> <span class=\"token string\">'./store'</span>\n\nVue<span class=\"token punctuation\">.</span>config<span class=\"token punctuation\">.</span>productionTip <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span>\n\n<span class=\"token keyword\">new</span> <span class=\"token class-name\">Vue</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  <span class=\"token function-variable function\">render</span><span class=\"token operator\">:</span> <span class=\"token parameter\">h</span> <span class=\"token operator\">=></span> <span class=\"token function\">h</span><span class=\"token punctuation\">(</span>App<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n  store\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">$mount</span><span class=\"token punctuation\">(</span><span class=\"token string\">'#app'</span><span class=\"token punctuation\">)</span>\n</code></pre><div class=\"line-numbers\"><span class=\"line-number\">1</span><br><span class=\"line-number\">2</span><br><span class=\"line-number\">3</span><br><span class=\"line-number\">4</span><br><span class=\"line-number\">5</span><br><span class=\"line-number\">6</span><br><span class=\"line-number\">7</span><br><span class=\"line-number\">8</span><br><span class=\"line-number\">9</span><br><span class=\"line-number\">10</span><br></div></div><p>此刻起, 就成功创建了一个 <strong>空仓库!!</strong></p>\n<h2 id=\"核心概念-state-状态\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#核心概念-state-状态\" aria-hidden=\"true\">#</a> 核心概念 - state 状态</h2>\n<p>State提供唯一的公共数据源，所有共享的数据都要统一放到Store中的State中存储。</p>\n<p>打开项目中的store.js文件，在state对象中可以添加我们要共享的数据。</p>\n<div class=\"language-jsx ext-jsx line-numbers-mode\"><pre v-pre class=\"language-jsx\"><code><span class=\"token comment\">// 创建仓库 store</span>\n<span class=\"token keyword\">const</span> store <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Vuex<span class=\"token punctuation\">.</span>Store</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// state 状态, 即数据, 类似于vue组件中的data,</span>\n  <span class=\"token comment\">// 区别在于 data 是组件自己的数据, 而 state 中的数据整个vue项目的组件都能访问到</span>\n  <span class=\"token literal-property property\">state</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token literal-property property\">count</span><span class=\"token operator\">:</span> <span class=\"token number\">101</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n</code></pre><div class=\"line-numbers\"><span class=\"line-number\">1</span><br><span class=\"line-number\">2</span><br><span class=\"line-number\">3</span><br><span class=\"line-number\">4</span><br><span class=\"line-number\">5</span><br><span class=\"line-number\">6</span><br><span class=\"line-number\">7</span><br><span class=\"line-number\">8</span><br></div></div><p>问题: 如何在组件中获取count?</p>\n<ol>\n<li>插值表达式 =》  {{  $store.state.count  }}</li>\n<li>mapState 映射计算属性 =》  {{ count  }}</li>\n</ol>\n<p><strong>1 原始形式- 插值表达式</strong></p>\n<p><strong><code>App.vue</code></strong></p>\n<p>组件中可以使用  <strong>this.$store</strong> 获取到vuex中的store对象实例，可通过<strong>state</strong>属性属性获取<strong>count</strong>， 如下</p>\n<div class=\"language-vue ext-vue line-numbers-mode\"><pre v-pre class=\"language-vue\"><code><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h1</span><span class=\"token punctuation\">></span></span>state的数据 - {{ $store.state.count }}<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h1</span><span class=\"token punctuation\">></span></span>\n</code></pre><div class=\"line-numbers\"><span class=\"line-number\">1</span><br></div></div><p><strong>计算属性</strong> - 将state属性定义在计算属性中 https://vuex.vuejs.org/zh/guide/state.html</p>\n<div class=\"language-javascript ext-js line-numbers-mode\"><pre v-pre class=\"language-javascript\"><code><span class=\"token comment\">// 把state中数据，定义在组件内的计算属性中</span>\n  <span class=\"token literal-property property\">computed</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">count</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">return</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>$store<span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span>count\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n</code></pre><div class=\"line-numbers\"><span class=\"line-number\">1</span><br><span class=\"line-number\">2</span><br><span class=\"line-number\">3</span><br><span class=\"line-number\">4</span><br><span class=\"line-number\">5</span><br><span class=\"line-number\">6</span><br></div></div><div class=\"language-vue ext-vue line-numbers-mode\"><pre v-pre class=\"language-vue\"><code><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h1</span><span class=\"token punctuation\">></span></span>state的数据 - {{ count }}<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h1</span><span class=\"token punctuation\">></span></span>\n</code></pre><div class=\"line-numbers\"><span class=\"line-number\">1</span><br></div></div><p>但是每次, 都这样一个个的提供计算属性, 太麻烦了, 所以我们需要辅助函数 mapState 帮我们简化语法</p>\n<p><strong>2 辅助函数  - mapState</strong></p>\n<blockquote>\n<p>mapState是辅助函数，帮助我们把store中的数据映射到 组件的计算属性中, 它属于一种方便的用法</p>\n</blockquote>\n<p>用法 ：</p>\n<p>第一步：导入mapState (mapState是vuex中的一个函数)</p>\n<div class=\"language-javascript ext-js line-numbers-mode\"><pre v-pre class=\"language-javascript\"><code><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> mapState <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'vuex'</span>\n</code></pre><div class=\"line-numbers\"><span class=\"line-number\">1</span><br></div></div><p>第二步：采用数组形式引入state属性</p>\n<div class=\"language-javascript ext-js line-numbers-mode\"><pre v-pre class=\"language-javascript\"><code><span class=\"token function\">mapState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token string\">'count'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> \n</code></pre><div class=\"line-numbers\"><span class=\"line-number\">1</span><br></div></div><blockquote>\n<p>上面代码的最终得到的是 <strong>类似于</strong></p>\n</blockquote>\n<div class=\"language-javascript ext-js line-numbers-mode\"><pre v-pre class=\"language-javascript\"><code><span class=\"token function\">count</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>$store<span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span>count\n<span class=\"token punctuation\">}</span>\n</code></pre><div class=\"line-numbers\"><span class=\"line-number\">1</span><br><span class=\"line-number\">2</span><br><span class=\"line-number\">3</span><br></div></div><p>第三步：利用<strong>展开运算符</strong>将导出的状态映射给计算属性</p>\n<div class=\"language-javascript ext-js line-numbers-mode\"><pre v-pre class=\"language-javascript\"><code>  <span class=\"token literal-property property\">computed</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token operator\">...</span><span class=\"token function\">mapState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token string\">'count'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n</code></pre><div class=\"line-numbers\"><span class=\"line-number\">1</span><br><span class=\"line-number\">2</span><br><span class=\"line-number\">3</span><br></div></div><div class=\"language-vue ext-vue line-numbers-mode\"><pre v-pre class=\"language-vue\"><code> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">></span></span> state的数据：{{ count }}<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n</code></pre><div class=\"line-numbers\"><span class=\"line-number\">1</span><br></div></div><h2 id=\"核心概念-mutations\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#核心概念-mutations\" aria-hidden=\"true\">#</a> 核心概念 - mutations</h2>\n<h3 id=\"基本使用\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#基本使用\" aria-hidden=\"true\">#</a> 基本使用</h3>\n<p>通过 <code>strict: true</code> 可以开启严格模式</p>\n<blockquote>\n<p><strong>state数据的修改只能通过mutations，并且mutations必须是同步的</strong></p>\n</blockquote>\n<p><strong>定义mutations</strong></p>\n<div class=\"language-javascript ext-js line-numbers-mode\"><pre v-pre class=\"language-javascript\"><code><span class=\"token keyword\">const</span> store  <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Vuex<span class=\"token punctuation\">.</span>Store</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  <span class=\"token literal-property property\">state</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token literal-property property\">count</span><span class=\"token operator\">:</span> <span class=\"token number\">0</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token comment\">// 定义mutations</span>\n  <span class=\"token literal-property property\">mutations</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n     \n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n</code></pre><div class=\"line-numbers\"><span class=\"line-number\">1</span><br><span class=\"line-number\">2</span><br><span class=\"line-number\">3</span><br><span class=\"line-number\">4</span><br><span class=\"line-number\">5</span><br><span class=\"line-number\">6</span><br><span class=\"line-number\">7</span><br><span class=\"line-number\">8</span><br><span class=\"line-number\">9</span><br></div></div><p><strong>格式说明</strong></p>\n<p>mutations是一个对象，对象中存放修改state的方法</p>\n<div class=\"language-javascript ext-js line-numbers-mode\"><pre v-pre class=\"language-javascript\"><code><span class=\"token literal-property property\">mutations</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// 方法里参数 第一个参数是当前store的state属性</span>\n    <span class=\"token comment\">// payload 载荷 运输参数 调用mutaiions的时候 可以传递参数 传递载荷</span>\n    <span class=\"token function\">addCount</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">state</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      state<span class=\"token punctuation\">.</span>count <span class=\"token operator\">+=</span> <span class=\"token number\">1</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n</code></pre><div class=\"line-numbers\"><span class=\"line-number\">1</span><br><span class=\"line-number\">2</span><br><span class=\"line-number\">3</span><br><span class=\"line-number\">4</span><br><span class=\"line-number\">5</span><br><span class=\"line-number\">6</span><br><span class=\"line-number\">7</span><br></div></div><p>组件中提交 mutations</p>\n<div class=\"language-jsx ext-jsx line-numbers-mode\"><pre v-pre class=\"language-jsx\"><code><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>$store<span class=\"token punctuation\">.</span><span class=\"token function\">commit</span><span class=\"token punctuation\">(</span><span class=\"token string\">'addCount'</span><span class=\"token punctuation\">)</span>\n</code></pre><div class=\"line-numbers\"><span class=\"line-number\">1</span><br></div></div><p><strong>解决问题: 两个子组件, 添加操作 add,  addN 实现</strong></p>\n<h3 id=\"带参数的-mutation\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#带参数的-mutation\" aria-hidden=\"true\">#</a> 带参数的 mutation</h3>\n<p>需求: 父组件也希望能改到数据</p>\n<p>提交 mutation 是可以传递参数的  <code>this.$store.commit('xxx',  参数)</code></p>\n<p>1 提供mutation函数</p>\n<div class=\"language-javascript ext-js line-numbers-mode\"><pre v-pre class=\"language-javascript\"><code><span class=\"token literal-property property\">mutations</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token operator\">...</span>\n  <span class=\"token function\">inputCount</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">state<span class=\"token punctuation\">,</span> count</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    state<span class=\"token punctuation\">.</span>count <span class=\"token operator\">=</span> count\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n</code></pre><div class=\"line-numbers\"><span class=\"line-number\">1</span><br><span class=\"line-number\">2</span><br><span class=\"line-number\">3</span><br><span class=\"line-number\">4</span><br><span class=\"line-number\">5</span><br><span class=\"line-number\">6</span><br></div></div><p>2 注册事件</p>\n<div class=\"language-jsx ext-jsx line-numbers-mode\"><pre v-pre class=\"language-jsx\"><code><span class=\"token operator\">&lt;</span>input type<span class=\"token operator\">=</span><span class=\"token string\">\"text\"</span> <span class=\"token operator\">:</span>value<span class=\"token operator\">=</span><span class=\"token string\">\"count\"</span> @input<span class=\"token operator\">=</span><span class=\"token string\">\"handleInput\"</span><span class=\"token operator\">></span>\n</code></pre><div class=\"line-numbers\"><span class=\"line-number\">1</span><br></div></div><p>3 提交mutation</p>\n<div class=\"language-jsx ext-jsx line-numbers-mode\"><pre v-pre class=\"language-jsx\"><code><span class=\"token function\">handleInput</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>$store<span class=\"token punctuation\">.</span><span class=\"token function\">commit</span><span class=\"token punctuation\">(</span><span class=\"token string\">'inputCount'</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">+</span>e<span class=\"token punctuation\">.</span>target<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n</code></pre><div class=\"line-numbers\"><span class=\"line-number\">1</span><br><span class=\"line-number\">2</span><br><span class=\"line-number\">3</span><br></div></div><p><strong>小tips: 提交的参数只能是一个, 如果有多个参数要传, 可以传递一个对象</strong></p>\n<div class=\"language-jsx ext-jsx line-numbers-mode\"><pre v-pre class=\"language-jsx\"><code><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>$store<span class=\"token punctuation\">.</span><span class=\"token function\">commit</span><span class=\"token punctuation\">(</span><span class=\"token string\">'inputCount'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token literal-property property\">count</span><span class=\"token operator\">:</span> e<span class=\"token punctuation\">.</span>target<span class=\"token punctuation\">.</span>value\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n</code></pre><div class=\"line-numbers\"><span class=\"line-number\">1</span><br><span class=\"line-number\">2</span><br><span class=\"line-number\">3</span><br></div></div><p><strong>解决问题:  addN 的实现</strong></p>\n<h3 id=\"辅助函数-mapmutations\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#辅助函数-mapmutations\" aria-hidden=\"true\">#</a> <strong>辅助函数</strong> - mapMutations</h3>\n<blockquote>\n<p>mapMutations和mapState很像，它把位于mutations中的方法提取了出来，我们可以将它导入</p>\n</blockquote>\n<div class=\"language-javascript ext-js line-numbers-mode\"><pre v-pre class=\"language-javascript\"><code><span class=\"token keyword\">import</span>  <span class=\"token punctuation\">{</span> mapMutations <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'vuex'</span>\n<span class=\"token literal-property property\">methods</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token operator\">...</span><span class=\"token function\">mapMutations</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token string\">'addCount'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n</code></pre><div class=\"line-numbers\"><span class=\"line-number\">1</span><br><span class=\"line-number\">2</span><br><span class=\"line-number\">3</span><br><span class=\"line-number\">4</span><br></div></div><blockquote>\n<p>上面代码的含义是将mutations的方法导入了methods中，等价于</p>\n</blockquote>\n<div class=\"language-javascript ext-js line-numbers-mode\"><pre v-pre class=\"language-javascript\"><code><span class=\"token literal-property property\">methods</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token comment\">// commit(方法名, 载荷参数)</span>\n      <span class=\"token function\">addCount</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n          <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>$store<span class=\"token punctuation\">.</span><span class=\"token function\">commit</span><span class=\"token punctuation\">(</span><span class=\"token string\">'addCount'</span><span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">}</span>\n <span class=\"token punctuation\">}</span>\n</code></pre><div class=\"line-numbers\"><span class=\"line-number\">1</span><br><span class=\"line-number\">2</span><br><span class=\"line-number\">3</span><br><span class=\"line-number\">4</span><br><span class=\"line-number\">5</span><br><span class=\"line-number\">6</span><br></div></div><p>此时，就可以直接通过this.addCount调用了</p>\n<div class=\"language-jsx ext-jsx line-numbers-mode\"><pre v-pre class=\"language-jsx\"><code><span class=\"token operator\">&lt;</span>button @click<span class=\"token operator\">=</span><span class=\"token string\">\"addCount\"</span><span class=\"token operator\">></span>值<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">></span></span>\n</code></pre><div class=\"line-numbers\"><span class=\"line-number\">1</span><br></div></div><p>但是请注意： Vuex中mutations中要求不能写异步代码，如果有异步的ajax请求，应该放置在actions中</p>\n<h2 id=\"核心概念-actions\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#核心概念-actions\" aria-hidden=\"true\">#</a> 核心概念-actions</h2>\n<blockquote>\n<p>state是存放数据的，mutations是同步更新数据 (便于监测数据的变化, 更新视图等, 方便于调试工具查看变化)，</p>\n<p>actions则负责进行异步操作</p>\n</blockquote>\n<p><strong>需求: 一秒钟之后, 要给一个数 去修改state</strong></p>\n<p><strong>定义actions</strong></p>\n<div class=\"language-javascript ext-js line-numbers-mode\"><pre v-pre class=\"language-javascript\"><code><span class=\"token literal-property property\">actions</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">setAsyncCount</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">context<span class=\"token punctuation\">,</span> num</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// 一秒后, 给一个数, 去修改 num</span>\n    <span class=\"token function\">setTimeout</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n      context<span class=\"token punctuation\">.</span><span class=\"token function\">commit</span><span class=\"token punctuation\">(</span><span class=\"token string\">'inputCount'</span><span class=\"token punctuation\">,</span> num<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1000</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n</code></pre><div class=\"line-numbers\"><span class=\"line-number\">1</span><br><span class=\"line-number\">2</span><br><span class=\"line-number\">3</span><br><span class=\"line-number\">4</span><br><span class=\"line-number\">5</span><br><span class=\"line-number\">6</span><br><span class=\"line-number\">7</span><br><span class=\"line-number\">8</span><br></div></div><p><strong>原始调用</strong> - $store (支持传参)</p>\n<div class=\"language-javascript ext-js line-numbers-mode\"><pre v-pre class=\"language-javascript\"><code><span class=\"token function\">setAsyncCount</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>$store<span class=\"token punctuation\">.</span><span class=\"token function\">dispatch</span><span class=\"token punctuation\">(</span><span class=\"token string\">'setAsyncCount'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">200</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n</code></pre><div class=\"line-numbers\"><span class=\"line-number\">1</span><br><span class=\"line-number\">2</span><br><span class=\"line-number\">3</span><br></div></div><p><strong>辅助函数</strong> -mapActions</p>\n<blockquote>\n<p>actions也有辅助函数，可以将action导入到组件中</p>\n</blockquote>\n<div class=\"language-javascript ext-js line-numbers-mode\"><pre v-pre class=\"language-javascript\"><code><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> mapActions <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'vuex'</span>\n<span class=\"token literal-property property\">methods</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token operator\">...</span><span class=\"token function\">mapActions</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token string\">'setAsyncCount'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n</code></pre><div class=\"line-numbers\"><span class=\"line-number\">1</span><br><span class=\"line-number\">2</span><br><span class=\"line-number\">3</span><br><span class=\"line-number\">4</span><br></div></div><p>直接通过 this.方法 就可以调用</p>\n<div class=\"language-vue ext-vue line-numbers-mode\"><pre v-pre class=\"language-vue\"><code><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">@click</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>setAsyncCount(200)<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>+异步<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">></span></span>\n</code></pre><div class=\"line-numbers\"><span class=\"line-number\">1</span><br></div></div><h2 id=\"核心概念-getters\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#核心概念-getters\" aria-hidden=\"true\">#</a> 核心概念-getters</h2>\n<blockquote>\n<p>除了state之外，有时我们还需要从state中派生出一些状态，这些状态是依赖state的，此时会用到getters</p>\n</blockquote>\n<p>例如，state中定义了list，为1-10的数组，</p>\n<div class=\"language-javascript ext-js line-numbers-mode\"><pre v-pre class=\"language-javascript\"><code><span class=\"token literal-property property\">state</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token literal-property property\">list</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">7</span><span class=\"token punctuation\">,</span> <span class=\"token number\">8</span><span class=\"token punctuation\">,</span> <span class=\"token number\">9</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">}</span>\n</code></pre><div class=\"line-numbers\"><span class=\"line-number\">1</span><br><span class=\"line-number\">2</span><br><span class=\"line-number\">3</span><br></div></div><p>组件中，需要显示所有大于5的数据，正常的方式，是需要list在组件中进行再一步的处理，但是getters可以帮助我们实现它</p>\n<p><strong>定义getters</strong></p>\n<div class=\"language-javascript ext-js line-numbers-mode\"><pre v-pre class=\"language-javascript\"><code>  <span class=\"token literal-property property\">getters</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// getters函数的第一个参数是 state</span>\n    <span class=\"token comment\">// 必须要有返回值</span>\n     <span class=\"token function-variable function\">filterList</span><span class=\"token operator\">:</span>  <span class=\"token parameter\">state</span> <span class=\"token operator\">=></span>  state<span class=\"token punctuation\">.</span>list<span class=\"token punctuation\">.</span><span class=\"token function\">filter</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">item</span> <span class=\"token operator\">=></span> item <span class=\"token operator\">></span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n</code></pre><div class=\"line-numbers\"><span class=\"line-number\">1</span><br><span class=\"line-number\">2</span><br><span class=\"line-number\">3</span><br><span class=\"line-number\">4</span><br><span class=\"line-number\">5</span><br></div></div><p>使用getters</p>\n<p><strong>原始方式</strong> -$store</p>\n<div class=\"language-vue ext-vue line-numbers-mode\"><pre v-pre class=\"language-vue\"><code><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">></span></span>{{ $store.getters.filterList }}<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n</code></pre><div class=\"line-numbers\"><span class=\"line-number\">1</span><br></div></div><p><strong>辅助函数</strong> - mapGetters</p>\n<div class=\"language-javascript ext-js line-numbers-mode\"><pre v-pre class=\"language-javascript\"><code><span class=\"token literal-property property\">computed</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token operator\">...</span><span class=\"token function\">mapGetters</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token string\">'filterList'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n</code></pre><div class=\"line-numbers\"><span class=\"line-number\">1</span><br><span class=\"line-number\">2</span><br><span class=\"line-number\">3</span><br></div></div><div class=\"language-vue ext-vue line-numbers-mode\"><pre v-pre class=\"language-vue\"><code> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">></span></span>{{ filterList }}<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n</code></pre><div class=\"line-numbers\"><span class=\"line-number\">1</span><br></div></div><h2 id=\"核心概念-模块-module-进阶拓展\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#核心概念-模块-module-进阶拓展\" aria-hidden=\"true\">#</a> 核心概念 - 模块 module (<strong>进阶拓展</strong>)</h2>\n<blockquote>\n<p><strong>由于使用单一状态树，应用的所有状态会集中到一个比较大的对象。当应用变得非常复杂时，store 对象就有可能变得相当臃肿。</strong></p>\n</blockquote>\n<p>这句话的意思是，如果把所有的状态都放在state中，当项目变得越来越大的时候，Vuex会变得越来越难以维护</p>\n<p>由此，又有了Vuex的模块化</p>\n<h3 id=\"模块定义-准备-state\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#模块定义-准备-state\" aria-hidden=\"true\">#</a> <strong>模块定义</strong> - 准备 state</h3>\n<p>定义两个模块   <strong>user</strong> 和  <strong>setting</strong></p>\n<p>user中管理用户的信息状态  userInfo  <code>modules/user.js</code></p>\n<div class=\"language-jsx ext-jsx line-numbers-mode\"><pre v-pre class=\"language-jsx\"><code><span class=\"token keyword\">const</span> state <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token literal-property property\">userInfo</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token literal-property property\">name</span><span class=\"token operator\">:</span> <span class=\"token string\">'zs'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token literal-property property\">age</span><span class=\"token operator\">:</span> <span class=\"token number\">18</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">const</span> mutations <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">const</span> actions <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">const</span> getters <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token punctuation\">{</span>\n  state<span class=\"token punctuation\">,</span>\n  mutations<span class=\"token punctuation\">,</span>\n  actions<span class=\"token punctuation\">,</span>\n  getters\n<span class=\"token punctuation\">}</span>\n\n</code></pre><div class=\"line-numbers\"><span class=\"line-number\">1</span><br><span class=\"line-number\">2</span><br><span class=\"line-number\">3</span><br><span class=\"line-number\">4</span><br><span class=\"line-number\">5</span><br><span class=\"line-number\">6</span><br><span class=\"line-number\">7</span><br><span class=\"line-number\">8</span><br><span class=\"line-number\">9</span><br><span class=\"line-number\">10</span><br><span class=\"line-number\">11</span><br><span class=\"line-number\">12</span><br><span class=\"line-number\">13</span><br><span class=\"line-number\">14</span><br><span class=\"line-number\">15</span><br><span class=\"line-number\">16</span><br><span class=\"line-number\">17</span><br><span class=\"line-number\">18</span><br><span class=\"line-number\">19</span><br><span class=\"line-number\">20</span><br></div></div><p>setting中管理项目应用的名称 title, desc  <code>modules/setting.js</code></p>\n<div class=\"language-jsx ext-jsx line-numbers-mode\"><pre v-pre class=\"language-jsx\"><code><span class=\"token keyword\">const</span> state <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token literal-property property\">title</span><span class=\"token operator\">:</span> <span class=\"token string\">'这是大标题'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">desc</span><span class=\"token operator\">:</span> <span class=\"token string\">'描述真呀真不错'</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">const</span> mutations <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">const</span> actions <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">const</span> getters <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token punctuation\">{</span>\n  state<span class=\"token punctuation\">,</span>\n  mutations<span class=\"token punctuation\">,</span>\n  actions<span class=\"token punctuation\">,</span>\n  getters\n<span class=\"token punctuation\">}</span>\n</code></pre><div class=\"line-numbers\"><span class=\"line-number\">1</span><br><span class=\"line-number\">2</span><br><span class=\"line-number\">3</span><br><span class=\"line-number\">4</span><br><span class=\"line-number\">5</span><br><span class=\"line-number\">6</span><br><span class=\"line-number\">7</span><br><span class=\"line-number\">8</span><br><span class=\"line-number\">9</span><br><span class=\"line-number\">10</span><br><span class=\"line-number\">11</span><br><span class=\"line-number\">12</span><br><span class=\"line-number\">13</span><br><span class=\"line-number\">14</span><br><span class=\"line-number\">15</span><br><span class=\"line-number\">16</span><br><span class=\"line-number\">17</span><br></div></div><p>使用模块中的数据,  可以直接通过模块名访问 <code>$store.state.模块名.xxx</code>  =&gt;  <code>$store.state.setting.title</code></p>\n<p>也可以通过 mapState 映射</p>\n<h3 id=\"命名空间-namespaced\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#命名空间-namespaced\" aria-hidden=\"true\">#</a> 命名空间 namespaced</h3>\n<p>默认情况下，模块内部的 action、mutation 和 getter 是注册在<strong>全局命名空间</strong>的</p>\n<p>这句话的意思是 刚才的 user模块 还是 setting模块，它的 action、mutation 和 getter 其实并没有区分，都可以直接通过全局的方式调用,</p>\n<p>但是，如果我们想保证内部模块的高封闭性，我们可以采用namespaced来进行设置</p>\n<p><code>modules/user.js</code></p>\n<div class=\"language-jsx ext-jsx line-numbers-mode\"><pre v-pre class=\"language-jsx\"><code><span class=\"token keyword\">const</span> state <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token literal-property property\">userInfo</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token literal-property property\">name</span><span class=\"token operator\">:</span> <span class=\"token string\">'zs'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token literal-property property\">age</span><span class=\"token operator\">:</span> <span class=\"token number\">18</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">myMsg</span><span class=\"token operator\">:</span> <span class=\"token string\">'我的数据'</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">const</span> mutations <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">updateMsg</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">state<span class=\"token punctuation\">,</span> msg</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    state<span class=\"token punctuation\">.</span>myMsg <span class=\"token operator\">=</span> msg\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">const</span> actions <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">const</span> getters <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token literal-property property\">namespaced</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n  state<span class=\"token punctuation\">,</span>\n  mutations<span class=\"token punctuation\">,</span>\n  actions<span class=\"token punctuation\">,</span>\n  getters\n<span class=\"token punctuation\">}</span>\n</code></pre><div class=\"line-numbers\"><span class=\"line-number\">1</span><br><span class=\"line-number\">2</span><br><span class=\"line-number\">3</span><br><span class=\"line-number\">4</span><br><span class=\"line-number\">5</span><br><span class=\"line-number\">6</span><br><span class=\"line-number\">7</span><br><span class=\"line-number\">8</span><br><span class=\"line-number\">9</span><br><span class=\"line-number\">10</span><br><span class=\"line-number\">11</span><br><span class=\"line-number\">12</span><br><span class=\"line-number\">13</span><br><span class=\"line-number\">14</span><br><span class=\"line-number\">15</span><br><span class=\"line-number\">16</span><br><span class=\"line-number\">17</span><br><span class=\"line-number\">18</span><br><span class=\"line-number\">19</span><br><span class=\"line-number\">20</span><br><span class=\"line-number\">21</span><br><span class=\"line-number\">22</span><br><span class=\"line-number\">23</span><br><span class=\"line-number\">24</span><br><span class=\"line-number\">25</span><br></div></div><p>提交模块中的mutation</p>\n<div class=\"language-jsx ext-jsx line-numbers-mode\"><pre v-pre class=\"language-jsx\"><code><span class=\"token literal-property property\">全局的</span><span class=\"token operator\">:</span>   <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>$store<span class=\"token punctuation\">.</span><span class=\"token function\">commit</span><span class=\"token punctuation\">(</span><span class=\"token string\">'mutation函数名'</span><span class=\"token punctuation\">,</span> 参数<span class=\"token punctuation\">)</span>\n\n<span class=\"token literal-property property\">模块中的</span><span class=\"token operator\">:</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>$store<span class=\"token punctuation\">.</span><span class=\"token function\">commit</span><span class=\"token punctuation\">(</span><span class=\"token string\">'模块名/mutation函数名'</span><span class=\"token punctuation\">,</span> 参数<span class=\"token punctuation\">)</span>\n</code></pre><div class=\"line-numbers\"><span class=\"line-number\">1</span><br><span class=\"line-number\">2</span><br><span class=\"line-number\">3</span><br></div></div><p>namespaced: true 后, 要添加映射, 可以加上模块名, 找对应模块的 state/mutations/actions/getters</p>\n<div class=\"language-jsx ext-jsx line-numbers-mode\"><pre v-pre class=\"language-jsx\"><code><span class=\"token literal-property property\">computed</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// 全局的</span>\n  <span class=\"token operator\">...</span><span class=\"token function\">mapState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token string\">'count'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n  <span class=\"token comment\">// 模块中的</span>\n  <span class=\"token operator\">...</span><span class=\"token function\">mapState</span><span class=\"token punctuation\">(</span><span class=\"token string\">'user'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'myMsg'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token literal-property property\">methods</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// 全局的</span>\n  <span class=\"token operator\">...</span><span class=\"token function\">mapMutations</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token string\">'addCount'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n  <span class=\"token comment\">// 模块中的</span>\n  <span class=\"token operator\">...</span><span class=\"token function\">mapMutations</span><span class=\"token punctuation\">(</span><span class=\"token string\">'user'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'updateMsg'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n</code></pre><div class=\"line-numbers\"><span class=\"line-number\">1</span><br><span class=\"line-number\">2</span><br><span class=\"line-number\">3</span><br><span class=\"line-number\">4</span><br><span class=\"line-number\">5</span><br><span class=\"line-number\">6</span><br><span class=\"line-number\">7</span><br><span class=\"line-number\">8</span><br><span class=\"line-number\">9</span><br><span class=\"line-number\">10</span><br><span class=\"line-number\">11</span><br><span class=\"line-number\">12</span><br></div></div>","export * from \"-!../../../../../node_modules/vue-loader/dist/templateLoader.js??ruleSet[1].rules[2]!../../../../../node_modules/@vuepress/bundler-webpack/lib/build/ssr/vuepressLoader.js!../../../../../node_modules/vue-loader/dist/index.js??ruleSet[0].use[1]!./vuex入门.html.vue?vue&type=template&id=4fb1ddee\"","import { ssrRender } from \"./vuex入门.html.vue?vue&type=template&id=4fb1ddee\"\nconst script = {}\n\nimport exportComponent from \"D:\\\\桌面文件\\\\Blog\\\\blog-demo\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['ssrRender',ssrRender]])\n\nexport default __exports__"],"names":["$store","count"],"sourceRoot":""}