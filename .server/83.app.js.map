{"version":3,"file":"83.app.js","mappings":";;;;;;;;;;;;AAAO;AACP;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;ECvKA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAAA,mCA6PI,uBAAyB;;IA7P7B,mCA8PI,uBAAyB;;IA9P7B,mCA+PI,uBAAyB;;IA/P7B,mCAgQI,uBAAyB;;IAhQ7B,mCAqQI,uBAAyB;;IArQ7B,mCAsQI,uBAAyB;;IAtQ7B,mCAuQI,uBAAyB;;IAvQ7B,mCAwQI,uBAAyB;;IAxQ7B,mCA2QI,uBAAyB;;IA3Q7B,mCA4QI,uBAAyB;;IA5Q7B,mCA6QI,uBAAyB;;IA7Q7B,mCA8QI,uBAAyB;;IA9Q7B,mCAiRI,uBAAyB;;IAjR7B,mCAkRI,uBAAyB;;IAlR7B,mCAmRI,uBAAyB;;IAnR7B,mCAoRI,uBAAyB;;IApR7B,mCAuRI,uBAAyB;;IAvR7B,mCAwRI,uBAAyB;;IAxR7B,mCAyRI,uBAAyB;;IAzR7B,mCA0RI,uBAAyB;;IA1R7B,mCA6RI,uBAAyB;;IA7R7B,mCA8RI,uBAAyB;;IA9R7B,mCA+RI,uBAAyB;;IA/R7B,mCAgSI,uBAAyB;;IAhS7B,mCAmSI,uBAAyB;;IAnS7B,mCAoSI,uBAAyB;;IApS7B,mCAqSI,uBAAyB;;IArS7B,mCAsSI,uBAAyB;;IAtS7B,mCAySI,uBAAyB;;IAzS7B,mCA0SI,uBAAyB;;IA1S7B,mCA2SI,uBAAyB;;IA3S7B,mCA4SI,uBAAyB;;IA5S7B,mCA+SI,uBAAyB;;IA/S7B,mCAgTI,uBAAyB;;IAhT7B,mCAiTI,uBAAyB;;IAjT7B,mCAkTI,uBAAyB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AElTiD;AAC9E;;AAEA,CAAwG;AACxG,iCAAiC,+BAAe,uBAAuB,SAAS;;AAEhF,kDAAe","sources":["webpack://blog-demo/./docs/.vuepress/.temp/pages/JAVA/2Java基础语法.html.js","webpack://blog-demo/./docs/.vuepress/.temp/pages/JAVA/2Java基础语法.html.vue","webpack://blog-demo/./docs/.vuepress/.temp/pages/JAVA/2Java基础语法.html.vue?bd1d","webpack://blog-demo/./docs/.vuepress/.temp/pages/JAVA/2Java基础语法.html.vue?c4e8"],"sourcesContent":["export const data = {\n  \"key\": \"v-7e88feb6\",\n  \"path\": \"/JAVA/2Java%E5%9F%BA%E7%A1%80%E8%AF%AD%E6%B3%95.html\",\n  \"title\": \"day02 - Java基础语法\",\n  \"lang\": \"zh-CN\",\n  \"frontmatter\": {},\n  \"excerpt\": \"\",\n  \"headers\": [\n    {\n      \"level\": 2,\n      \"title\": \"1. 注释\",\n      \"slug\": \"_1-注释\",\n      \"children\": [\n        {\n          \"level\": 3,\n          \"title\": \"使用的技巧\",\n          \"slug\": \"使用的技巧\",\n          \"children\": []\n        },\n        {\n          \"level\": 3,\n          \"title\": \"注意点\",\n          \"slug\": \"注意点\",\n          \"children\": []\n        }\n      ]\n    },\n    {\n      \"level\": 2,\n      \"title\": \"2. 关键字\",\n      \"slug\": \"_2-关键字\",\n      \"children\": [\n        {\n          \"level\": 3,\n          \"title\": \"2.1 概念\",\n          \"slug\": \"_2-1-概念\",\n          \"children\": []\n        },\n        {\n          \"level\": 3,\n          \"title\": \"2.2 第一个关键字class\",\n          \"slug\": \"_2-2-第一个关键字class\",\n          \"children\": []\n        }\n      ]\n    },\n    {\n      \"level\": 2,\n      \"title\": \"3. 字面量\",\n      \"slug\": \"_3-字面量\",\n      \"children\": [\n        {\n          \"level\": 3,\n          \"title\": \"区分技巧\",\n          \"slug\": \"区分技巧\",\n          \"children\": []\n        }\n      ]\n    },\n    {\n      \"level\": 2,\n      \"title\": \"4. 变量\",\n      \"slug\": \"_4-变量\",\n      \"children\": [\n        {\n          \"level\": 3,\n          \"title\": \"4.1 什么是变量？\",\n          \"slug\": \"_4-1-什么是变量\",\n          \"children\": []\n        },\n        {\n          \"level\": 3,\n          \"title\": \"4.2 变量的定义格式\",\n          \"slug\": \"_4-2-变量的定义格式\",\n          \"children\": []\n        }\n      ]\n    },\n    {\n      \"level\": 2,\n      \"title\": \"5. 数据类型\",\n      \"slug\": \"_5-数据类型\",\n      \"children\": [\n        {\n          \"level\": 3,\n          \"title\": \"5.1 Java语言数据类型的分类\",\n          \"slug\": \"_5-1-java语言数据类型的分类\",\n          \"children\": []\n        },\n        {\n          \"level\": 3,\n          \"title\": \"5.2 基本数据类型的四类八种\",\n          \"slug\": \"_5-2-基本数据类型的四类八种\",\n          \"children\": []\n        },\n        {\n          \"level\": 3,\n          \"title\": \"5.3 定义8种基本数据类型变量\",\n          \"slug\": \"_5-3-定义8种基本数据类型变量\",\n          \"children\": []\n        }\n      ]\n    },\n    {\n      \"level\": 2,\n      \"title\": \"6. 标识符\",\n      \"slug\": \"_6-标识符\",\n      \"children\": [\n        {\n          \"level\": 3,\n          \"title\": \"6.1 硬性要求：\",\n          \"slug\": \"_6-1-硬性要求\",\n          \"children\": []\n        },\n        {\n          \"level\": 3,\n          \"title\": \"6.2 软件建议：\",\n          \"slug\": \"_6-2-软件建议\",\n          \"children\": []\n        },\n        {\n          \"level\": 3,\n          \"title\": \"6.2.1 小驼峰命名法\",\n          \"slug\": \"_6-2-1-小驼峰命名法\",\n          \"children\": []\n        },\n        {\n          \"level\": 3,\n          \"title\": \"6.2.2 大驼峰命名法\",\n          \"slug\": \"_6-2-2-大驼峰命名法\",\n          \"children\": []\n        },\n        {\n          \"level\": 3,\n          \"title\": \"阿里巴巴命名规范细节：\",\n          \"slug\": \"阿里巴巴命名规范细节\",\n          \"children\": []\n        }\n      ]\n    },\n    {\n      \"level\": 2,\n      \"title\": \"7. 键盘录入\",\n      \"slug\": \"_7-键盘录入\",\n      \"children\": []\n    },\n    {\n      \"level\": 2,\n      \"title\": \"8. IDEA\",\n      \"slug\": \"_8-idea\",\n      \"children\": [\n        {\n          \"level\": 3,\n          \"title\": \"8.1 IDEA概述\",\n          \"slug\": \"_8-1-idea概述\",\n          \"children\": []\n        },\n        {\n          \"level\": 3,\n          \"title\": \"8.2 IDEA的下载和安装\",\n          \"slug\": \"_8-2-idea的下载和安装\",\n          \"children\": []\n        }\n      ]\n    }\n  ],\n  \"git\": {}\n}\n","<h1 id=\"day02-java基础语法\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#day02-java基础语法\" aria-hidden=\"true\">#</a> day02 - Java基础语法</h1>\n<h2 id=\"_1-注释\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#_1-注释\" aria-hidden=\"true\">#</a> 1. 注释</h2>\n<p>​\t注释是对代码的解释和说明文字。</p>\n<p>Java中的注释分为三种：</p>\n<ul>\n<li>单行注释：</li>\n</ul>\n<div class=\"language-java ext-java line-numbers-mode\"><pre v-pre class=\"language-java\"><code><span class=\"token comment\">// 这是单行注释文字</span>\n</code></pre><div class=\"line-numbers\"><span class=\"line-number\">1</span><br></div></div><ul>\n<li>多行注释：</li>\n</ul>\n<div class=\"language-java ext-java line-numbers-mode\"><pre v-pre class=\"language-java\"><code><span class=\"token comment\">/*\n这是多行注释文字\n这是多行注释文字\n这是多行注释文字\n*/</span>\n注意：多行注释不能嵌套使用。\n</code></pre><div class=\"line-numbers\"><span class=\"line-number\">1</span><br><span class=\"line-number\">2</span><br><span class=\"line-number\">3</span><br><span class=\"line-number\">4</span><br><span class=\"line-number\">5</span><br><span class=\"line-number\">6</span><br></div></div><ul>\n<li>文档注释（暂时用不到）：</li>\n</ul>\n<div class=\"language-java ext-java line-numbers-mode\"><pre v-pre class=\"language-java\"><code><span class=\"token doc-comment comment\">/**\n这是多行注释文字\n这是多行注释文字\n这是多行注释文字\n*/</span>\n</code></pre><div class=\"line-numbers\"><span class=\"line-number\">1</span><br><span class=\"line-number\">2</span><br><span class=\"line-number\">3</span><br><span class=\"line-number\">4</span><br><span class=\"line-number\">5</span><br></div></div><h3 id=\"使用的技巧\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#使用的技巧\" aria-hidden=\"true\">#</a> 使用的技巧</h3>\n<p>​\t如果我们要对代码进行解释，那么就可以使用注释。</p>\n<p>​\t当注释的内容比较少，一行就写完了，可以用单行注释。</p>\n<p>​\t如果注释的内容比较多，需要写在多行，那么可以使用多行注释。</p>\n<h3 id=\"注意点\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#注意点\" aria-hidden=\"true\">#</a> 注意点</h3>\n<p>​\t注释的内容不会参与编译和运行的，仅仅是对代码的解释说明而已。</p>\n<p>​\t所以，不管在注释当中写什么内容，都不会影响代码运行的结果。</p>\n<h2 id=\"_2-关键字\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#_2-关键字\" aria-hidden=\"true\">#</a> 2. 关键字</h2>\n<h3 id=\"_2-1-概念\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#_2-1-概念\" aria-hidden=\"true\">#</a> 2.1 概念</h3>\n<p>​\t被Java赋予了特定含义的英文单词。</p>\n<p>​\t当我们在代码中写了关键字之后，程序在运行的时候，就知道要做什么事情了。</p>\n<p>注意：关键字很多，不用刻意去记。</p>\n<table>\n<thead>\n<tr>\n<th><strong>abstract</strong></th>\n<th><strong>assert</strong></th>\n<th><strong>boolean</strong></th>\n<th><strong>break</strong></th>\n<th><strong>byte</strong></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><strong>case</strong></td>\n<td><strong>catch</strong></td>\n<td><strong>char</strong></td>\n<td><strong>class</strong></td>\n<td><strong>const</strong></td>\n</tr>\n<tr>\n<td><strong>continue</strong></td>\n<td><strong>default</strong></td>\n<td><strong>do</strong></td>\n<td><strong>double</strong></td>\n<td><strong>else</strong></td>\n</tr>\n<tr>\n<td><strong>enum</strong></td>\n<td><strong>extends</strong></td>\n<td><strong>final</strong></td>\n<td><strong>finally</strong></td>\n<td><strong>float</strong></td>\n</tr>\n<tr>\n<td><strong>for</strong></td>\n<td><strong>goto</strong></td>\n<td><strong>if</strong></td>\n<td><strong>implements</strong></td>\n<td><strong>import</strong></td>\n</tr>\n<tr>\n<td><strong>instanceof</strong></td>\n<td><strong>int</strong></td>\n<td><strong>interface</strong></td>\n<td><strong>long</strong></td>\n<td><strong>native</strong></td>\n</tr>\n<tr>\n<td><strong>new</strong></td>\n<td><strong>package</strong></td>\n<td><strong>private</strong></td>\n<td><strong>protected</strong></td>\n<td><strong>public</strong></td>\n</tr>\n<tr>\n<td><strong>return</strong></td>\n<td><strong>strictfp</strong></td>\n<td><strong>short</strong></td>\n<td><strong>static</strong></td>\n<td><strong>super</strong></td>\n</tr>\n<tr>\n<td><strong>switch</strong></td>\n<td><strong>synchronized</strong></td>\n<td><strong>this</strong></td>\n<td><strong>throw</strong></td>\n<td><strong>throws</strong></td>\n</tr>\n<tr>\n<td><strong>transient</strong></td>\n<td><strong>try</strong></td>\n<td><strong>void</strong></td>\n<td><strong>volatile</strong></td>\n<td><strong>while</strong></td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"_2-2-第一个关键字class\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#_2-2-第一个关键字class\" aria-hidden=\"true\">#</a> 2.2 第一个关键字class</h3>\n<p>​\t表示定义一个类。创建一个类。</p>\n<p>类：Java项目最基本的组成单元，一个完整的Java项目有可能会有成千上万个类来组成的。</p>\n<p>class后面跟随的就是这个类的名字，简称：类名。</p>\n<p>在类名后面会有一对大括号，表示这个类的内容。</p>\n<p>举例：</p>\n<div class=\"language-java ext-java line-numbers-mode\"><pre v-pre class=\"language-java\"><code><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">HelloWorld</span><span class=\"token punctuation\">{</span>\n    \n   \n<span class=\"token punctuation\">}</span>\n</code></pre><div class=\"line-numbers\"><span class=\"line-number\">1</span><br><span class=\"line-number\">2</span><br><span class=\"line-number\">3</span><br><span class=\"line-number\">4</span><br></div></div><p>解释：class表示定义类。</p>\n<p>​\t类名：HelloWorld</p>\n<p>​\tHelloWorld后面的大括号表示这个类的范围。</p>\n<h2 id=\"_3-字面量\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#_3-字面量\" aria-hidden=\"true\">#</a> 3. 字面量</h2>\n<p>作用：告诉程序员，数据在程序中的书写格式。</p>\n<table>\n<thead>\n<tr>\n<th><strong>字面量类型</strong></th>\n<th><strong>说明</strong></th>\n<th><strong>程序中的写法</strong></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>整数</td>\n<td>不带小数的数字</td>\n<td>666，-88</td>\n</tr>\n<tr>\n<td>小数</td>\n<td>带小数的数字</td>\n<td>13.14，-5.21</td>\n</tr>\n<tr>\n<td>字符</td>\n<td>必须使用单引号，有且仅能一个字符</td>\n<td>‘A’，‘0’，   ‘我’</td>\n</tr>\n<tr>\n<td>字符串</td>\n<td>必须使用双引号，内容可有可无</td>\n<td>“HelloWorld”，“黑马程序员”</td>\n</tr>\n<tr>\n<td>布尔值</td>\n<td>布尔值，表示真假，只有两个值：true，false</td>\n<td>true 、false</td>\n</tr>\n<tr>\n<td>空值</td>\n<td>一个特殊的值，空值</td>\n<td>值是：null</td>\n</tr>\n</tbody>\n</table>\n<div class=\"language-java ext-java line-numbers-mode\"><pre v-pre class=\"language-java\"><code><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Demo</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 输出一个整数</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token number\">5.5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 输出一个小数</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token char\">'a'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 输出一个字符</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 输出boolean值true</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"欢迎来到黑马程序员\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 输出字符串</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre><div class=\"line-numbers\"><span class=\"line-number\">1</span><br><span class=\"line-number\">2</span><br><span class=\"line-number\">3</span><br><span class=\"line-number\">4</span><br><span class=\"line-number\">5</span><br><span class=\"line-number\">6</span><br><span class=\"line-number\">7</span><br><span class=\"line-number\">8</span><br><span class=\"line-number\">9</span><br></div></div><h3 id=\"区分技巧\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#区分技巧\" aria-hidden=\"true\">#</a> 区分技巧</h3>\n<ol>\n<li>不带小数点的数字都是整数类型的字面量。</li>\n<li>只要带了小数点，那么就是小数类型的字面量。</li>\n<li>只要用双引号引起来的，不管里面的内容是什么，不管里面有没有内容，都是字符串类型的字面量。</li>\n<li>字符类型的字面量必须用单引号引起来，不管内容是什么，但是个数有且只能有一个。</li>\n<li>字符类型的字面量只有两个值，true、false。</li>\n<li>空类型的字面量只有一个值，null。</li>\n</ol>\n<h2 id=\"_4-变量\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#_4-变量\" aria-hidden=\"true\">#</a> 4. 变量</h2>\n<h3 id=\"_4-1-什么是变量\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#_4-1-什么是变量\" aria-hidden=\"true\">#</a> 4.1 什么是变量？</h3>\n<p>​\t变量就在程序中临时存储数据的容器。但是这个容器中只能存一个值。</p>\n<h3 id=\"_4-2-变量的定义格式\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#_4-2-变量的定义格式\" aria-hidden=\"true\">#</a> 4.2 变量的定义格式</h3>\n<p>​\t数据类型 变量名 = 数据值；</p>\n<h4 id=\"_4-2-1-格式详解\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#_4-2-1-格式详解\" aria-hidden=\"true\">#</a> 4.2.1 格式详解</h4>\n<p>​\t数据类型：限定了变量当中能存储什么类型的数据。</p>\n<p>​\t\t\t   如果要存10，那么数据类型就需要写整数类型。</p>\n<p>​\t\t\t   如果要存10.0，那么数据类型就需要写小数类型。</p>\n<p>​\t变量名：其实就是这个容器的名字。</p>\n<p>​\t\t\t当以后想要使用变量里面的数据时，直接使用变量名就可以了。</p>\n<p>​\t数据值：真正存储在容器中的数据。</p>\n<p>​\t分号：表示语句的结束，就跟以前写作文时候的句号是一样的。</p>\n<h4 id=\"_4-2-2-常用的数据类型\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#_4-2-2-常用的数据类型\" aria-hidden=\"true\">#</a> 4.2.2 常用的数据类型</h4>\n<p>​\t整数：int</p>\n<p>​\t小数：（浮点数）double</p>\n<p>​\t其他数据类型稍后讲解</p>\n<p>举例：</p>\n<div class=\"language-java ext-java line-numbers-mode\"><pre v-pre class=\"language-java\"><code><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">VariableDemo</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token comment\">//定义一个整数类型的变量</span>\n\t\t<span class=\"token comment\">//数据类型 变量名 = 数据值;</span>\n\t\t<span class=\"token keyword\">int</span> a <span class=\"token operator\">=</span> <span class=\"token number\">16</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//16</span>\n\t\t\n\t\t<span class=\"token comment\">//定义一个小数类型的变量</span>\n\t\t<span class=\"token keyword\">double</span> b <span class=\"token operator\">=</span> <span class=\"token number\">10.1</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>b<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//10.1</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre><div class=\"line-numbers\"><span class=\"line-number\">1</span><br><span class=\"line-number\">2</span><br><span class=\"line-number\">3</span><br><span class=\"line-number\">4</span><br><span class=\"line-number\">5</span><br><span class=\"line-number\">6</span><br><span class=\"line-number\">7</span><br><span class=\"line-number\">8</span><br><span class=\"line-number\">9</span><br><span class=\"line-number\">10</span><br><span class=\"line-number\">11</span><br><span class=\"line-number\">12</span><br></div></div><h4 id=\"_4-2-3-变量的注意事项\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#_4-2-3-变量的注意事项\" aria-hidden=\"true\">#</a> 4.2.3 变量的注意事项</h4>\n<ul>\n<li>变量名不能重复</li>\n<li>在一条语句中，可以定义多个变量。但是这种方式影响代码的阅读，所以了解一下即可。</li>\n<li>变量在使用之前必须要赋值。</li>\n</ul>\n<p>案例：</p>\n<div class=\"language-java ext-java line-numbers-mode\"><pre v-pre class=\"language-java\"><code><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">VariableDemo2</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token comment\">//1.变量名不允许重复</span>\n\t\t<span class=\"token comment\">//int a = 10;</span>\n\t\t<span class=\"token comment\">//int a = 20;</span>\n\t\t<span class=\"token comment\">//System.out.println(a);</span>\n\t\t\n\t\t<span class=\"token comment\">//2.一条语句可以定义多个变量</span>\n\t\t<span class=\"token comment\">//了解。</span>\n\t\t<span class=\"token comment\">//int a = 10, b = 20, c = 20,d = 20;</span>\n\t\t<span class=\"token comment\">//System.out.println(a);//?</span>\n\t\t<span class=\"token comment\">//System.out.println(b);//?</span>\n\t\t\n\t\t\n\t\t<span class=\"token comment\">//3.变量在使用之前必须要赋值</span>\n\t\t<span class=\"token keyword\">int</span> a <span class=\"token operator\">=</span> <span class=\"token number\">30</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre><div class=\"line-numbers\"><span class=\"line-number\">1</span><br><span class=\"line-number\">2</span><br><span class=\"line-number\">3</span><br><span class=\"line-number\">4</span><br><span class=\"line-number\">5</span><br><span class=\"line-number\">6</span><br><span class=\"line-number\">7</span><br><span class=\"line-number\">8</span><br><span class=\"line-number\">9</span><br><span class=\"line-number\">10</span><br><span class=\"line-number\">11</span><br><span class=\"line-number\">12</span><br><span class=\"line-number\">13</span><br><span class=\"line-number\">14</span><br><span class=\"line-number\">15</span><br><span class=\"line-number\">16</span><br><span class=\"line-number\">17</span><br><span class=\"line-number\">18</span><br><span class=\"line-number\">19</span><br></div></div><h2 id=\"_5-数据类型\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#_5-数据类型\" aria-hidden=\"true\">#</a> 5. 数据类型</h2>\n<h3 id=\"_5-1-java语言数据类型的分类\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#_5-1-java语言数据类型的分类\" aria-hidden=\"true\">#</a> 5.1 Java语言数据类型的分类</h3>\n<ul>\n<li>基本数据类型</li>\n<li>引用数据类型（面向对象的时候再深入学习）</li>\n</ul>\n<h3 id=\"_5-2-基本数据类型的四类八种\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#_5-2-基本数据类型的四类八种\" aria-hidden=\"true\">#</a> 5.2 基本数据类型的四类八种</h3>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">数据类型</th>\n<th style=\"text-align:center\">关键字</th>\n<th style=\"text-align:center\">内存占用</th>\n<th style=\"text-align:center\">取值范围</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">整数</td>\n<td style=\"text-align:center\">byte</td>\n<td style=\"text-align:center\">1</td>\n<td style=\"text-align:center\">负的2的7次方 ~ 2的7次方-1(-128~127)</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\">short</td>\n<td style=\"text-align:center\">2</td>\n<td style=\"text-align:center\">负的2的15次方 ~ 2的15次方-1(-32768~32767)</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\">int</td>\n<td style=\"text-align:center\">4</td>\n<td style=\"text-align:center\">负的2的31次方 ~ 2的31次方-1</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\">long</td>\n<td style=\"text-align:center\">8</td>\n<td style=\"text-align:center\">负的2的63次方 ~ 2的63次方-1</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">浮点数</td>\n<td style=\"text-align:center\">float</td>\n<td style=\"text-align:center\">4</td>\n<td style=\"text-align:center\">1.401298e-45 ~ 3.402823e+38</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\">double</td>\n<td style=\"text-align:center\">8</td>\n<td style=\"text-align:center\">4.9000000e-324 ~ 1.797693e+308</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">字符</td>\n<td style=\"text-align:center\">char</td>\n<td style=\"text-align:center\">2</td>\n<td style=\"text-align:center\">0-65535</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">布尔</td>\n<td style=\"text-align:center\">boolean</td>\n<td style=\"text-align:center\">1</td>\n<td style=\"text-align:center\">true，false</td>\n</tr>\n</tbody>\n</table>\n<h4 id=\"说明\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#说明\" aria-hidden=\"true\">#</a> 说明</h4>\n<p>​\te+38表示是乘以10的38次方，同样，e-45表示乘以10的负45次方。</p>\n<p>​\t在java中整数默认是int类型，浮点数默认是double类型。</p>\n<h4 id=\"需要记忆以下几点\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#需要记忆以下几点\" aria-hidden=\"true\">#</a> 需要记忆以下几点</h4>\n<p>byte类型的取值范围：</p>\n<p>​\t-128 ~ 127</p>\n<p>int类型的大概取值范围：</p>\n<p>​\t-21亿多  ~ 21亿多</p>\n<p>整数类型和小数类型的取值范围大小关系：</p>\n<p>​\tdouble &gt; float &gt; long &gt; int &gt; short &gt; byte</p>\n<p>最为常用的数据类型选择：</p>\n<ul>\n<li>\n<p>在定义变量的时候，要根据实际的情况来选择不同类型的变量。</p>\n<p>比如：人的年龄，可以选择byte类型。</p>\n<p>比如：地球的年龄，可以选择long类型。</p>\n</li>\n<li>\n<p>如果整数类型中，不太确定范围，那么默认使用int类型。</p>\n</li>\n<li>\n<p>如果小数类型中，不太确定范围，那么默认使用double类型。</p>\n</li>\n<li>\n<p>如果要定义字符类型的变量，那么使用char</p>\n</li>\n<li>\n<p>如果要定义布尔类型的变量，那么使用boolean</p>\n</li>\n</ul>\n<h3 id=\"_5-3-定义8种基本数据类型变量\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#_5-3-定义8种基本数据类型变量\" aria-hidden=\"true\">#</a> 5.3 定义8种基本数据类型变量</h3>\n<div class=\"language-java ext-java line-numbers-mode\"><pre v-pre class=\"language-java\"><code><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">VariableDemo3</span><span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n        <span class=\"token comment\">//1.定义byte类型的变量</span>\n        <span class=\"token comment\">//数据类型 变量名 = 数据值;</span>\n        <span class=\"token keyword\">byte</span> a <span class=\"token operator\">=</span> <span class=\"token number\">10</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token comment\">//2.定义short类型的变量</span>\n        <span class=\"token keyword\">short</span> b <span class=\"token operator\">=</span> <span class=\"token number\">20</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>b<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token comment\">//3.定义int类型的变量</span>\n        <span class=\"token keyword\">int</span> c <span class=\"token operator\">=</span> <span class=\"token number\">30</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>c<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token comment\">//4.定义long类型的变量</span>\n        <span class=\"token keyword\">long</span> d <span class=\"token operator\">=</span> <span class=\"token number\">123456789123456789L</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>d<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token comment\">//5.定义float类型的变量</span>\n        <span class=\"token keyword\">float</span> e <span class=\"token operator\">=</span> <span class=\"token number\">10.1F</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token comment\">//6.定义double类型的变量</span>\n        <span class=\"token keyword\">double</span> f <span class=\"token operator\">=</span> <span class=\"token number\">20.3</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>f<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token comment\">//7.定义char类型的变量</span>\n        <span class=\"token keyword\">char</span> g <span class=\"token operator\">=</span> <span class=\"token char\">'a'</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>g<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token comment\">//8.定义boolean类型的变量</span>\n        <span class=\"token keyword\">boolean</span> h <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>h<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre><div class=\"line-numbers\"><span class=\"line-number\">1</span><br><span class=\"line-number\">2</span><br><span class=\"line-number\">3</span><br><span class=\"line-number\">4</span><br><span class=\"line-number\">5</span><br><span class=\"line-number\">6</span><br><span class=\"line-number\">7</span><br><span class=\"line-number\">8</span><br><span class=\"line-number\">9</span><br><span class=\"line-number\">10</span><br><span class=\"line-number\">11</span><br><span class=\"line-number\">12</span><br><span class=\"line-number\">13</span><br><span class=\"line-number\">14</span><br><span class=\"line-number\">15</span><br><span class=\"line-number\">16</span><br><span class=\"line-number\">17</span><br><span class=\"line-number\">18</span><br><span class=\"line-number\">19</span><br><span class=\"line-number\">20</span><br><span class=\"line-number\">21</span><br><span class=\"line-number\">22</span><br><span class=\"line-number\">23</span><br><span class=\"line-number\">24</span><br><span class=\"line-number\">25</span><br><span class=\"line-number\">26</span><br><span class=\"line-number\">27</span><br><span class=\"line-number\">28</span><br><span class=\"line-number\">29</span><br><span class=\"line-number\">30</span><br><span class=\"line-number\">31</span><br><span class=\"line-number\">32</span><br><span class=\"line-number\">33</span><br><span class=\"line-number\">34</span><br><span class=\"line-number\">35</span><br><span class=\"line-number\">36</span><br><span class=\"line-number\">37</span><br></div></div><h4 id=\"注意点-1\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#注意点-1\" aria-hidden=\"true\">#</a> <strong>注意点</strong></h4>\n<ul>\n<li>如果要定义 一个整数类型的变量，不知道选择哪种数据类型了，默认使用int。</li>\n<li>如果要定义 一个小数类型的变量，不知道选择哪种数据类型了，默认使用double。</li>\n<li>如果要定义一个long类型的变量，那么在数据值的后面需要加上L后缀。（大小写都可以，建议大写。）</li>\n<li>如果要定义一个float类型的变量，那么在数据值的后面需要加上F后缀。（大小写都可以）</li>\n</ul>\n<h2 id=\"_6-标识符\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#_6-标识符\" aria-hidden=\"true\">#</a> 6. 标识符</h2>\n<h3 id=\"_6-1-硬性要求\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#_6-1-硬性要求\" aria-hidden=\"true\">#</a> 6.1 硬性要求：</h3>\n<p>​\t必须要这么做，否则代码会报错。</p>\n<ul>\n<li>必须由数字、字母、下划线_、美元符号$组成。</li>\n<li>数字不能开头</li>\n<li>不能是关键字</li>\n<li>区分大小写的。</li>\n</ul>\n<h3 id=\"_6-2-软件建议\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#_6-2-软件建议\" aria-hidden=\"true\">#</a> 6.2 软件建议：</h3>\n<p>​\t如果不这么做，代码不会报错，但是会让代码显得比较low。</p>\n<h3 id=\"_6-2-1-小驼峰命名法\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#_6-2-1-小驼峰命名法\" aria-hidden=\"true\">#</a> 6.2.1 小驼峰命名法</h3>\n<p>适用于变量名和方法名</p>\n<ul>\n<li>\n<p>如果是一个单词，那么全部小写，比如：name</p>\n</li>\n<li>\n<p>如果是多个单词，那么从第二个单词开始，首字母大写，比如：firstName、maxAge</p>\n</li>\n</ul>\n<h3 id=\"_6-2-2-大驼峰命名法\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#_6-2-2-大驼峰命名法\" aria-hidden=\"true\">#</a> 6.2.2 大驼峰命名法</h3>\n<p>适用于类名</p>\n<ul>\n<li>\n<p>如果是一个单词，那么首字母大写。比如：Demo、Test。</p>\n</li>\n<li>\n<p>如果是多个单词，那么每一个单词首字母都需要大写。比如：HelloWorld</p>\n</li>\n</ul>\n<p>不管起什么名字，都要做到见名知意。</p>\n<h3 id=\"阿里巴巴命名规范细节\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#阿里巴巴命名规范细节\" aria-hidden=\"true\">#</a> 阿里巴巴命名规范细节：</h3>\n<ol>\n<li>\n<p>尽量不要用拼音。但是一些国际通用的拼音可视为英文单词。</p>\n<p>正确：alibaba、hangzhou、nanjing</p>\n<p>错误：jiage、dazhe</p>\n</li>\n<li>\n<p>平时在给变量名、方法名、类名起名字的时候，不要使用下划线或美元符号。</p>\n<p>错误：_name</p>\n<p>正确：name</p>\n</li>\n</ol>\n<h2 id=\"_7-键盘录入\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#_7-键盘录入\" aria-hidden=\"true\">#</a> 7. 键盘录入</h2>\n<p>​\t键盘录入的实际功能Java已经帮我们写好了，不需要我们自己再实现了，而Java写好的功能都放在了Scanner这个类中，所以，我们只要直接使用Scanner这个类就可以了。</p>\n<p>使用步骤：</p>\n<p>第一步：</p>\n<p>​\t导包：其实就是表示先找到Scanner这个类在哪。</p>\n<p>第二步：</p>\n<p>​\t创建对象：其实就表示申明一下，我准备开始用Scanner这个类了。</p>\n<p>第三步：</p>\n<p>​\t接收数据：也是真正干活的代码。</p>\n<p>代码示例：</p>\n<div class=\"language-java ext-java line-numbers-mode\"><pre v-pre class=\"language-java\"><code><span class=\"token comment\">//导包，其实就是先找到Scanner这个类在哪</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Scanner</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">ScannerDemo1</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token comment\">//2.创建对象，其实就是申明一下，我准备开始用Scanner这个类了。</span>\n\t\t<span class=\"token class-name\">Scanner</span> sc <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Scanner</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>in<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token comment\">//3.接收数据</span>\n\t\t<span class=\"token comment\">//当程序运行之后，我们在键盘输入的数据就会被变量i给接收了</span>\n\t\t<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"请输入一个数字\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> sc<span class=\"token punctuation\">.</span><span class=\"token function\">nextInt</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre><div class=\"line-numbers\"><span class=\"line-number\">1</span><br><span class=\"line-number\">2</span><br><span class=\"line-number\">3</span><br><span class=\"line-number\">4</span><br><span class=\"line-number\">5</span><br><span class=\"line-number\">6</span><br><span class=\"line-number\">7</span><br><span class=\"line-number\">8</span><br><span class=\"line-number\">9</span><br><span class=\"line-number\">10</span><br><span class=\"line-number\">11</span><br><span class=\"line-number\">12</span><br><span class=\"line-number\">13</span><br></div></div><h2 id=\"_8-idea\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#_8-idea\" aria-hidden=\"true\">#</a> 8. IDEA</h2>\n<h3 id=\"_8-1-idea概述\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#_8-1-idea概述\" aria-hidden=\"true\">#</a> 8.1 IDEA概述</h3>\n<p>​\tIDEA全称IntelliJ IDEA，是用于Java语言开发的集成环境，它是业界公认的目前用于Java程序开发最好的工具。</p>\n<p><strong>集成环境：</strong></p>\n<p>​\t把代码编写，编译，执行，调试等多种功能综合到一起的开发工具。</p>\n<h3 id=\"_8-2-idea的下载和安装\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#_8-2-idea的下载和安装\" aria-hidden=\"true\">#</a> 8.2 IDEA的下载和安装</h3>\n<h4 id=\"_8-2-1-下载\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#_8-2-1-下载\" aria-hidden=\"true\">#</a> 8.2.1 下载</h4>\n<p>​\t可以到官方网站自行下载，网址为：https://www.jetbrains.com/idea</p>\n<p>​\t今天的资料中，对应的安装包也提高给大家了。</p>\n","export * from \"-!../../../../../node_modules/vue-loader/dist/templateLoader.js??ruleSet[1].rules[2]!../../../../../node_modules/@vuepress/bundler-webpack/lib/build/ssr/vuepressLoader.js!../../../../../node_modules/vue-loader/dist/index.js??ruleSet[0].use[1]!./2Java基础语法.html.vue?vue&type=template&id=7234b330\"","import { ssrRender } from \"./2Java基础语法.html.vue?vue&type=template&id=7234b330\"\nconst script = {}\n\nimport exportComponent from \"D:\\\\桌面文件\\\\Blog\\\\blog-demo\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['ssrRender',ssrRender]])\n\nexport default __exports__"],"names":[],"sourceRoot":""}