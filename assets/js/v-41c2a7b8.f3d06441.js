"use strict";(self.webpackChunkblog_demo=self.webpackChunkblog_demo||[]).push([[107],{3188:(n,a,s)=>{s.r(a),s.d(a,{data:()=>t});const t={key:"v-41c2a7b8",path:"/Vue/%E5%9F%BA%E7%A1%80%E6%A6%82%E5%BF%B5+vuecli+%E6%8C%87%E4%BB%A4%E4%B8%8A.html",title:"vue基本概念",lang:"zh-CN",frontmatter:{},excerpt:"",headers:[{level:2,title:"vue介绍",slug:"vue介绍",children:[{level:3,title:"渐进式的概念",slug:"渐进式的概念",children:[]},{level:3,title:"框架的概念",slug:"框架的概念",children:[]},{level:3,title:"vue是 MVVM 的框架",slug:"vue是-mvvm-的框架",children:[]}]},{level:2,title:"开发vue的方式",slug:"开发vue的方式",children:[]},{level:2,title:"基本使用",slug:"基本使用",children:[]},{level:2,title:"如何覆盖webpack配置",slug:"如何覆盖webpack配置",children:[]},{level:2,title:"目录分析与清理",slug:"目录分析与清理",children:[]},{level:2,title:"vue单文件组件的说明",slug:"vue单文件组件的说明",children:[]},{level:2,title:"vue通过data提供数据",slug:"vue通过data提供数据",children:[]},{level:2,title:"通过插值表达式显示数据",slug:"通过插值表达式显示数据",children:[]},{level:2,title:"安装vue开发者工具",slug:"安装vue开发者工具",children:[]},{level:2,title:"v-bind指令",slug:"v-bind指令",children:[]},{level:2,title:"v-on指令",slug:"v-on指令",children:[{level:3,title:"基本使用",slug:"基本使用-1",children:[]},{level:3,title:"vue中获取事件对象(了解)",slug:"vue中获取事件对象-了解",children:[]},{level:3,title:"v-on 事件修饰符",slug:"v-on-事件修饰符",children:[]},{level:3,title:"按键修饰符",slug:"按键修饰符",children:[]}]},{level:2,title:"v-if 和 v-show",slug:"v-if-和-v-show",children:[{level:3,title:"基本使用",slug:"基本使用-2",children:[]},{level:3,title:"v-else 和 v-else-if",slug:"v-else-和-v-else-if",children:[]}]},{level:2,title:"v-model",slug:"v-model",children:[{level:3,title:"基本使用",slug:"基本使用-3",children:[]},{level:3,title:"v-model 处理其他表单元素",slug:"v-model-处理其他表单元素",children:[]},{level:3,title:"v-model 修饰符",slug:"v-model-修饰符",children:[]}]},{level:2,title:"v-text 和 v-html",slug:"v-text-和-v-html",children:[{level:3,title:"v-text指令",slug:"v-text指令",children:[]},{level:3,title:"v-html指令",slug:"v-html指令",children:[]}]}],git:{}}},5939:(n,a,s)=>{s.r(a),s.d(a,{default:()=>S});var t=s(6252),p=s(3577);const e=(0,t._)("h1",{id:"vue基本概念",tabindex:"-1"},[(0,t._)("a",{class:"header-anchor",href:"#vue基本概念","aria-hidden":"true"},"#"),(0,t.Uk)(" vue基本概念")],-1),l=(0,t._)("h2",{id:"vue介绍",tabindex:"-1"},[(0,t._)("a",{class:"header-anchor",href:"#vue介绍","aria-hidden":"true"},"#"),(0,t.Uk)(" vue介绍")],-1),o={href:"https://cn.vuejs.org/",target:"_blank",rel:"noopener noreferrer"},c=(0,t.Uk)("vue 中文网"),u=(0,t.Uk)(" 尤雨溪"),i={href:"https://cn.vuejs.org/v2/guide/index.html#Vue-js-%E6%98%AF%E4%BB%80%E4%B9%88",target:"_blank",rel:"noopener noreferrer"},r=(0,t.Uk)("Vue.js 是什么"),k=(0,t._)("li",null,[(0,t.Uk)("Vue (读音 /vjuː/，类似于 "),(0,t._)("strong",null,"view"),(0,t.Uk)(") 是一套用于构建用户界面的"),(0,t._)("strong",null,"渐进式javascript框架"),(0,t.Uk)("。")],-1),d=(0,t._)("h3",{id:"渐进式的概念",tabindex:"-1"},[(0,t._)("a",{class:"header-anchor",href:"#渐进式的概念","aria-hidden":"true"},"#"),(0,t.Uk)(" 渐进式的概念")],-1),g=(0,t._)("p",null,"渐进式：逐渐增强，可以在项目中使用vue的一部分功能，也可以使用vue的全家桶来管理整个项目。",-1),v=(0,t._)("p",null,"angular: 全家桶",-1),m=(0,t._)("p",null,[(0,t._)("img",{src:"https://ooszy.cco.vin/img/blog-public/ljz.gif",alt:"",originSrc:"images/%E6%B8%90%E8%BF%9B%E5%BC%8F.png",data:"aurora"})],-1),b=(0,t._)("h3",{id:"框架的概念",tabindex:"-1"},[(0,t._)("a",{class:"header-anchor",href:"#框架的概念","aria-hidden":"true"},"#"),(0,t.Uk)(" 框架的概念")],-1),h={href:"https://zhuanlan.zhihu.com/p/26078359?group_id=830801800406917120",target:"_blank",rel:"noopener noreferrer"},x=(0,t.Uk)("我们所说的前端框架与库的区别？"),q=(0,t.uE)('<p><strong>Library</strong></p><ul><li><p>代表：moment axios</p></li><li><p>库，本质上是一些函数的集合。每次调用函数，实现一个特定的功能 工具箱</p></li></ul><ul><li>使用库的时候，把库当成工具使用，需要自己控制代码的执行逻辑。</li></ul><p><strong>Framework</strong></p><ul><li><p>代表：vue、angular、react、bootstrap</p></li><li><p>框架，是一套完整的解决方案</p></li></ul><ul><li>使用框架的时候，框架实现了大部分的功能，我们只需要按照框架的规则写代码</li></ul><p><strong>库和框架的区别</strong></p><ul><li>使用库的时候，很自由，只要调用库提供的各种各样的方法就行，也可以不用其他的一些方法</li><li>使用框架的时候，需要按照框架的规则写代码，限制会非常多，但同时框架的功能也很强大，可以极大的提升开发的效率。</li></ul><h3 id="vue是-mvvm-的框架" tabindex="-1"><a class="header-anchor" href="#vue是-mvvm-的框架" aria-hidden="true">#</a> vue是 MVVM 的框架</h3><ul><li>MVVM思想：一种软件架构模式，决定了写代码的方式。 <ul><li>M：model数据模型(ajax获取到的数据)</li><li>V：view视图（页面）</li><li>VM：ViewModel 视图模型</li></ul></li></ul><ul><li>MVVM通过<code>数据双向绑定</code>让数据自动地双向同步 <strong>不在需要操作DOM</strong><ul><li>V（修改视图） -&gt; M（数据自动同步）</li><li>M（修改数据） -&gt; V（视图自动同步）</li></ul></li></ul><p><strong>1. 在vue中，不推荐直接手动操作DOM！！！</strong></p><p><strong>2. 在vue中，通过数据驱动视图，不要在想着怎么操作DOM，而是想着如何操作数据！！</strong></p><h2 id="开发vue的方式" tabindex="-1"><a class="header-anchor" href="#开发vue的方式" aria-hidden="true">#</a> 开发vue的方式</h2><p>开发vue有两种方式</p><ul><li>传统开发模式：基于html/css/js文件开发vue</li><li>工程化开发方式：在webpack环境中开发vue，这是最推荐的方式。</li><li>现代化的项目也都是在webpack环境下进行开发的。</li></ul><h1 id="vue-cli的使用" tabindex="-1"><a class="header-anchor" href="#vue-cli的使用" aria-hidden="true">#</a> vue-cli的使用</h1><blockquote><p><code>vue-cli</code>也叫vue脚手架,<code>vue-cli</code>是vue官方提供的一个全局命令工具，这个命令可以帮助我们快速的创建一个vue项目的基础架子。</p></blockquote><ul><li>开箱即用</li><li>零配置</li><li>webpack、babel</li></ul><h2 id="基本使用" tabindex="-1"><a class="header-anchor" href="#基本使用" aria-hidden="true">#</a> 基本使用</h2><ul><li>全局安装命令</li></ul><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">npm</span> <span class="token function">install</span> -g @vue/cli\n<span class="token comment"># OR</span>\n<span class="token function">yarn</span> global <span class="token function">add</span> @vue/cli\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><ul><li>查看版本<code>vue</code></li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>vue <span class="token operator">--</span>version\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><ul><li>初始化一个vue项目</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>vue create <span class="token function">项目名</span><span class="token punctuation">(</span>不能用中文<span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><ul><li>启动项目</li></ul><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>yarn serve\nyarn build\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h2 id="如何覆盖webpack配置" tabindex="-1"><a class="header-anchor" href="#如何覆盖webpack配置" aria-hidden="true">#</a> 如何覆盖webpack配置</h2><blockquote><p>注意：我们在项目无法找到webpack.config.js文件，因为vue把它隐藏。</p></blockquote><p>如果需要覆盖webpack的配置，可以修改vue.config.js文件，覆盖webpack配置文件</p><div class="language-jsx ext-jsx line-numbers-mode"><pre class="language-jsx"><code><span class="token keyword">const</span> <span class="token punctuation">{</span> defineConfig <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;@vue/cli-service&#39;</span><span class="token punctuation">)</span>\nmodule<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token function">defineConfig</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n  <span class="token literal-property property">transpileDependencies</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n  <span class="token comment">// 配置端口号</span>\n  <span class="token literal-property property">devServer</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n    <span class="token literal-property property">port</span><span class="token operator">:</span> <span class="token number">3000</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><h2 id="目录分析与清理" tabindex="-1"><a class="header-anchor" href="#目录分析与清理" aria-hidden="true">#</a> 目录分析与清理</h2><ul><li>public/index.html不用动，提供一个最基础的页面</li><li>src/main.js不用动， 渲染了App.vue组件</li><li>src/App.vue默认有很多的内容，可以全部删除</li></ul><div class="language-jsx ext-jsx line-numbers-mode"><pre class="language-jsx"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span><span class="token plain-text">\n  </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span><span class="token plain-text">123</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span><span class="token plain-text">\n</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><ul><li>assets文件夹与components直接删除</li></ul><h2 id="vue单文件组件的说明" tabindex="-1"><a class="header-anchor" href="#vue单文件组件的说明" aria-hidden="true">#</a> vue单文件组件的说明</h2><p>一个<code>.vue</code>文件就是一个组件,后续开发vue，所有的功能都是基于组件实现。</p><p>安装插件</p><p>一个单文件组件由三部分构成</p><ul><li>template(必须) 影响组件渲染的结构 html <ul><li>只能有一个根元素</li></ul></li><li>script 逻辑 js</li><li>style 样式 css less scss <ul><li>style用于提供组件的样式，默认只能用css</li><li>可以通过<code>lang=&quot;less&quot;</code>开启less的功能，需要安装依赖包</li></ul></li></ul><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>yarn add less-loader@7.2.1 less -D\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><h1 id="vue的插值表达式" tabindex="-1"><a class="header-anchor" href="#vue的插值表达式" aria-hidden="true">#</a> vue的插值表达式</h1><h2 id="vue通过data提供数据" tabindex="-1"><a class="header-anchor" href="#vue通过data提供数据" aria-hidden="true">#</a> vue通过data提供数据</h2><blockquote><p>vue中通过template可以提供模板，但是这样的数据是写死的。</p></blockquote><p>vue可以通过data提供数据，注意：<code>data必须是一个函数，并且返回一个对象</code></p><div class="language-jsx ext-jsx line-numbers-mode"><pre class="language-jsx"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token plain-text">\nexport default {\n  data () {\n    return {\n      money: 100,\n      msg: &#39;hello&#39;\n    }\n  }    \n}\n</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><h2 id="通过插值表达式显示数据" tabindex="-1"><a class="header-anchor" href="#通过插值表达式显示数据" aria-hidden="true">#</a> 通过插值表达式显示数据</h2>',48),f=(0,t.Uk)("插值表达式, 小胡子语法 mustach语法"),j=(0,t.uE)('<ol><li><p>作用: 使用 data 中的数据渲染视图（模板）</p></li><li><p>基本语法, 支持三元运算符</p><div class="language-jsx ext-jsx line-numbers-mode"><pre class="language-jsx"><code><span class="token punctuation">{</span><span class="token punctuation">{</span> msg <span class="token punctuation">}</span><span class="token punctuation">}</span>\n<span class="token punctuation">{</span><span class="token punctuation">{</span> obj<span class="token punctuation">.</span>name <span class="token punctuation">}</span><span class="token punctuation">}</span>\n<span class="token punctuation">{</span><span class="token punctuation">{</span> msg<span class="token punctuation">.</span><span class="token function">toUpperCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">}</span><span class="token punctuation">}</span>\n<span class="token punctuation">{</span><span class="token punctuation">{</span> obj<span class="token punctuation">.</span>age <span class="token operator">&gt;</span> <span class="token number">18</span> <span class="token operator">?</span> <span class="token string">&#39;成年&#39;</span> <span class="token operator">:</span> <span class="token string">&#39;未成年&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div></li><li><p>vue中插值表达式的注意点</p><p>(1) 使用的数据在 data 中要存在</p><div class="language-jsx ext-jsx line-numbers-mode"><pre class="language-jsx"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">{</span><span class="token punctuation">{</span> gaga <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">&gt;</span></span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>(2) 能使用表达式, 但是不能使用 if for</p><div class="language-jsx ext-jsx line-numbers-mode"><pre class="language-jsx"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">{</span><span class="token punctuation">{</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>obj<span class="token punctuation">.</span>age <span class="token operator">&gt;</span> <span class="token number">18</span> <span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token punctuation">}</span>   <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">&gt;</span></span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>(3) 不能在标签属性中使用</p><div class="language-jsx ext-jsx line-numbers-mode"><pre class="language-jsx"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>box<span class="token punctuation">&quot;</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>box<span class="token punctuation">&quot;</span></span> <span class="token attr-name">title</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>{{ msg }}<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">&gt;</span></span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div></li></ol><h2 id="安装vue开发者工具" tabindex="-1"><a class="header-anchor" href="#安装vue开发者工具" aria-hidden="true">#</a> 安装vue开发者工具</h2><ul><li>直接通过谷歌应用商店安装 需要梯子</li><li>通过极简插件下载插件，本地安装。 https://chrome.zzzmh.cn/index</li></ul><h1 id="vue指令" tabindex="-1"><a class="header-anchor" href="#vue指令" aria-hidden="true">#</a> vue指令</h1><p><strong>vue指令, 实质上就是特殊的 html 标签属性, 特点: v- 开头</strong></p><p>每个 v- 开头的指令, 都有着自己独立的功能, 将来vue解析时, 会根据不同的指令提供不同的功能</p><h2 id="v-bind指令" tabindex="-1"><a class="header-anchor" href="#v-bind指令" aria-hidden="true">#</a> v-bind指令</h2><ul><li>描述：插值表达式不能用在html的属性上，如果想要动态的设置html元素的属性，需要使用v-bind指令</li><li>作用：动态的设置html的属性</li><li>语法：<code>v-bind:title=&quot;msg&quot;</code></li><li>简写：<code>:title=&quot;msg&quot;</code></li></ul><div class="language-html ext-html line-numbers-mode"><pre class="language-html"><code><span class="token comment">&lt;!-- 完整语法 --&gt;</span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name"><span class="token namespace">v-bind:</span>href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>url<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span>\n<span class="token comment">&lt;!-- 缩写 --&gt;</span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">:href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>url<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><h2 id="v-on指令" tabindex="-1"><a class="header-anchor" href="#v-on指令" aria-hidden="true">#</a> v-on指令</h2><h3 id="基本使用-1" tabindex="-1"><a class="header-anchor" href="#基本使用-1" aria-hidden="true">#</a> 基本使用</h3><p>语法： 1. v-on:事件名=“要执行的少量代码&quot; 2. v-on:事件名=“methods中的函数名&quot; 3. v-on:事件名=“methods中的函数名(实参)&quot;</p><ul><li><p>最基本的语法</p><ul><li><code>&lt;button v-on:事件名=&quot;事件函数&quot;&gt;按钮&lt;/button&gt;</code>，需要在methods中提供事件处理函数</li></ul><div class="language-jsx ext-jsx line-numbers-mode"><pre class="language-jsx"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name"><span class="token namespace">v-on:</span>click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>fn<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text">搬砖</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name"><span class="token namespace">v-on:</span>click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>fn1<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text">卖房</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span>\n\n  <span class="token comment">// 提供方法</span>\n  <span class="token literal-property property">methods</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n    <span class="token function">fn</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;你好啊&#39;</span><span class="token punctuation">)</span>\n      <span class="token comment">// console.log(this)</span>\n      <span class="token keyword">this</span><span class="token punctuation">.</span>money<span class="token operator">++</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token function">fn1</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n      <span class="token keyword">this</span><span class="token punctuation">.</span>money <span class="token operator">+=</span> <span class="token number">10000</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div></li><li><p>需要传递参数</p><ul><li><code>&lt;button v-on:事件名=&quot;事件函数(参数)&quot;&gt;按钮&lt;/button&gt;</code>，需要在methods中提供事件函数，接受参数</li></ul><div class="language-jsx ext-jsx line-numbers-mode"><pre class="language-jsx"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name"><span class="token namespace">v-on:</span>click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>addMoney(1)<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text">搬砖</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name"><span class="token namespace">v-on:</span>click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>addMoney(10000)<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text">卖房</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span>\n\n<span class="token literal-property property">methods</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n  <span class="token function">addMoney</span> <span class="token punctuation">(</span><span class="token parameter">money</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">this</span><span class="token punctuation">.</span>money <span class="token operator">+=</span> money\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div></li><li><p>如果事件的逻辑足够简单，可以不提供函数</p></li></ul><div class="language-jsx ext-jsx line-numbers-mode"><pre class="language-jsx"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name"><span class="token namespace">v-on:</span>click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>money++<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text">搬砖</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name"><span class="token namespace">v-on:</span>click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>money += 10000<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text">卖房</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h3 id="vue中获取事件对象-了解" tabindex="-1"><a class="header-anchor" href="#vue中获取事件对象-了解" aria-hidden="true">#</a> vue中获取事件对象(了解)</h3><p>需求: 默认a标签点击会跳走, 希望阻止默认的跳转, 阻止默认行为 e.preventDefault()</p><p>vue中获取事件对象</p><p>(1) 没有传参, 通过形参接收 e</p><p>(2) 传参了, 通过$event指代事件对象 e</p><div class="language-jsx ext-jsx line-numbers-mode"><pre class="language-jsx"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span><span class="token plain-text">\n  </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>app<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text">\n    &lt;a @click=&quot;fn&quot; href=&quot;http://www.baidu.com&quot;&gt;去百度</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span><span class="token plain-text">\n    &lt;a @click=&quot;fn2(100, $event)&quot; href=&quot;http://www.baidu.com&quot;&gt;去百度2</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span><span class="token plain-text">\n  </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span><span class="token plain-text">\n</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>\n\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token plain-text">\nexport default {\n  methods: {\n    fn(e) {\n      e.preventDefault()\n    },\n    fn2(num, e) {\n      e.preventDefault()\n    }\n  }\n}\n</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br></div></div><h3 id="v-on-事件修饰符" tabindex="-1"><a class="header-anchor" href="#v-on-事件修饰符" aria-hidden="true">#</a> v-on 事件修饰符</h3><ul><li><p>vue中提供的事件修饰符</p><p>.prevent 阻止默认行为</p><p>.stop 阻止冒泡</p></li></ul><div class="language-html ext-html line-numbers-mode"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>app<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">@click.prevent</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>fn<span class="token punctuation">&quot;</span></span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>http://www.baidu.com<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>去百度<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h3 id="按键修饰符" tabindex="-1"><a class="header-anchor" href="#按键修饰符" aria-hidden="true">#</a> 按键修饰符</h3><p>需求: 用户输入内容, 回车, 打印输入的内容</p><p>在监听键盘事件时，我们经常需要判断详细的按键。此时，可以为键盘相关的事件添加按键修饰符</p><ul><li><p>@keyup.enter 回车</p></li><li><p>@keyup.esc 返回</p></li></ul><div class="language-html ext-html line-numbers-mode"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>app<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>text<span class="token punctuation">&quot;</span></span> <span class="token attr-name">@keyup</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>fn<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>hr</span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>text<span class="token punctuation">&quot;</span></span> <span class="token attr-name">@keyup.enter</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>fn2<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>\n\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h2 id="v-if-和-v-show" tabindex="-1"><a class="header-anchor" href="#v-if-和-v-show" aria-hidden="true">#</a> v-if 和 v-show</h2><h3 id="基本使用-2" tabindex="-1"><a class="header-anchor" href="#基本使用-2" aria-hidden="true">#</a> 基本使用</h3><p>v-show 和 v-if 功能: 控制盒子的显示隐藏</p><ol><li><p>v-show</p><p>语法: v-show=&quot;布尔值&quot; (true显示, false隐藏)</p><p>原理: 实质是在控制元素的 css 样式, <code>display: none;</code></p></li><li><p>v-if</p><p>语法: v-if=&quot;布尔值&quot; (true显示, false隐藏)</p><p>原理: 实质是在动态的创建 或者 删除元素节点</p></li></ol><p>应用场景:</p><ul><li><p>如果是频繁的切换显示隐藏, 用 v-show</p><p>v-if, 频繁切换会大量的创建和删除元素, 消耗性能</p></li><li><p>如果是不用频繁切换, 要么显示, 要么隐藏的情况, 适合于用 v-if</p><p>v-if 是惰性的, 如果初始值为 false, 那么这些元素就直接不创建了, 节省一些初始渲染开销</p></li></ul><div class="language-html ext-html line-numbers-mode"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>app<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span> <span class="token attr-name">v-show</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>isShow<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>v-show盒子-{{ msg }}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span> <span class="token attr-name">v-if</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>isShow<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>v-if盒子-{{ msg }}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><h3 id="v-else-和-v-else-if" tabindex="-1"><a class="header-anchor" href="#v-else-和-v-else-if" aria-hidden="true">#</a> v-else 和 v-else-if</h3><div class="language-html ext-html line-numbers-mode"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>app<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span> <span class="token attr-name">v-if</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>isLogin<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>尊敬的超级vip, 你好<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span> <span class="token attr-name">v-else</span><span class="token punctuation">&gt;</span></span>你谁呀, 赶紧登陆~<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">&gt;</span></span>\n\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>hr</span><span class="token punctuation">&gt;</span></span>\n  \n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span> <span class="token attr-name">v-if</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>age &gt;= 60<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>60岁以上, 广场舞<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span> <span class="token attr-name">v-else-if</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>age &gt;= 30<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>30岁以上, 搓麻将<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span> <span class="token attr-name">v-else-if</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>age &gt;= 20<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>20岁以上, 蹦迪<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span> <span class="token attr-name">v-else</span><span class="token punctuation">&gt;</span></span>20岁以下, 唱跳rap篮球<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>\n\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><h2 id="v-model" tabindex="-1"><a class="header-anchor" href="#v-model" aria-hidden="true">#</a> v-model</h2><h3 id="基本使用-3" tabindex="-1"><a class="header-anchor" href="#基本使用-3" aria-hidden="true">#</a> 基本使用</h3><p>**作用: 给表单元素使用, 双向数据绑定 **</p><ol><li><p>数据变化了, 视图会跟着变</p></li><li><p>视图变化了, 数据要跟着变</p><p>输入框内容变化了(监听用户的输入, 监听input事件), 数据要跟着变</p></li></ol><p>语法: v-model=&#39;值&#39;</p><div class="language-jsx ext-jsx line-numbers-mode"><pre class="language-jsx"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>text<span class="token punctuation">&quot;</span></span> <span class="token attr-name">v-model</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>msg<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text">\n</span></code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><h3 id="v-model-处理其他表单元素" tabindex="-1"><a class="header-anchor" href="#v-model-处理其他表单元素" aria-hidden="true">#</a> v-model 处理其他表单元素</h3><p><strong>v-model 会忽略掉表单元素原本的value, checked等初始值</strong></p><p>textarea, select, checkbox</p><h3 id="v-model-修饰符" tabindex="-1"><a class="header-anchor" href="#v-model-修饰符" aria-hidden="true">#</a> v-model 修饰符</h3><ul><li><p>number</p><p>如果想自动将用户的输入值, 用parseFloat转成数字类型, ，可以给 <code>v-model</code> 添加 <code>number</code> 修饰符：</p><div class="language-html ext-html line-numbers-mode"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">v-model.number</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>age<span class="token punctuation">&quot;</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>number<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>如果这个值如果这个值无法转数字，则会返回原始的值。</p></li><li><p>trim</p><p>如果要自动过滤用户输入的首尾空白字符，可以给 <code>v-model</code> 添加 <code>trim</code> 修饰符：</p><div class="language-html ext-html line-numbers-mode"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">v-model.trim</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>msg<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div></li><li><p>lazy</p><p>在<code>change</code>时而非<code>input</code>时更新，可以给 <code>v-model</code> 添加 <code>lazy</code> 修饰符：</p><div class="language-html ext-html line-numbers-mode"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">v-model.lazy</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>msg<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div></li></ul><h2 id="v-text-和-v-html" tabindex="-1"><a class="header-anchor" href="#v-text-和-v-html" aria-hidden="true">#</a> v-text 和 v-html</h2><h3 id="v-text指令" tabindex="-1"><a class="header-anchor" href="#v-text指令" aria-hidden="true">#</a> v-text指令</h3>',50),w=(0,t.Uk)("解释：更新元素的 "),y=(0,t._)("code",null,"textContent/innerText",-1),_=(0,t.Uk)("。如果要更新部分的 "),M=(0,t._)("code",null,"textContent",-1),U=(0,t.Uk)(" ，需要使用 "),E=(0,t.Uk)(" 插值。"),V=(0,t.uE)('<div class="language-html ext-html line-numbers-mode"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span> <span class="token attr-name">v-text</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>msg<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">&gt;</span></span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><h3 id="v-html指令" tabindex="-1"><a class="header-anchor" href="#v-html指令" aria-hidden="true">#</a> v-html指令</h3><ul><li>解释：更新DOM对象的<code> innerHTML</code>,html标签会生效</li></ul><div class="language-html ext-html line-numbers-mode"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span> <span class="token attr-name">v-html</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>msg<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">&gt;</span></span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div>',4),z=(0,t.Uk)("在网站上动态渲染任意 HTML 是非常危险的，因为容易导致 "),B={href:"https://en.wikipedia.org/wiki/Cross-site_scripting",target:"_blank",rel:"noopener noreferrer"},C=(0,t.Uk)("XSS 攻击"),D=(0,t.Uk)("。"),A=(0,t._)("p",null,[(0,t._)("strong",null,[(0,t.Uk)("只在可信内容上使用 "),(0,t._)("code",null,"v-html"),(0,t.Uk)("，"),(0,t._)("strong",null,"永不"),(0,t.Uk)("用在用户提交的内容上。")])],-1),F={},S=(0,s(3744).Z)(F,[["render",function(n,a){const s=(0,t.up)("ExternalLinkIcon");return(0,t.wg)(),(0,t.iD)(t.HY,null,[e,l,(0,t._)("ul",null,[(0,t._)("li",null,[(0,t._)("a",o,[c,(0,t.Wm)(s)]),u]),(0,t._)("li",null,[(0,t._)("a",i,[r,(0,t.Wm)(s)])]),k]),d,g,v,m,b,(0,t._)("ul",null,[(0,t._)("li",null,[(0,t._)("a",h,[x,(0,t.Wm)(s)])])]),q,(0,t._)("p",null,[f,(0,t._)("code",null,(0,p.zw)(),1)]),j,(0,t._)("ul",null,[(0,t._)("li",null,[w,y,_,M,U,(0,t._)("code",null,(0,p.zw)(n.Mustache),1),E])]),V,(0,t._)("p",null,[(0,t._)("strong",null,[z,(0,t._)("a",B,[C,(0,t.Wm)(s)]),D])]),A],64)}]])}}]);