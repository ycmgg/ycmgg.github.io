"use strict";(self.webpackChunkblog_demo=self.webpackChunkblog_demo||[]).push([[175],{8687:(a,n,s)=>{s.r(n),s.d(n,{data:()=>e});const e={key:"v-3d2f7822",path:"/JAVA/1Java%E5%9F%BA%E7%A1%80.html",title:"Java基础",lang:"zh-CN",frontmatter:{},excerpt:"",headers:[{level:2,title:"1. 人机交互",slug:"_1-人机交互",children:[{level:3,title:"1.1 什么是cmd？",slug:"_1-1-什么是cmd",children:[]},{level:3,title:"1.2 如何打开CMD窗口？",slug:"_1-2-如何打开cmd窗口",children:[]},{level:3,title:"1.3 常用CMD命令",slug:"_1-3-常用cmd命令",children:[]},{level:3,title:"1.5 环境变量",slug:"_1-5-环境变量",children:[]}]},{level:2,title:"2. Java概述",slug:"_2-java概述",children:[{level:3,title:"1.1 Java是什么？",slug:"_1-1-java是什么",children:[]},{level:3,title:"1.2下载和安装",slug:"_1-2下载和安装",children:[]},{level:3,title:"1.4 HelloWorld案例常见问题",slug:"_1-4-helloworld案例常见问题",children:[]},{level:3,title:"1.5 环境变量",slug:"_1-5-环境变量-1",children:[]},{level:3,title:"1.6 Java语言的发展",slug:"_1-6-java语言的发展",children:[]},{level:3,title:"1.8 Java的三大平台",slug:"_1-8-java的三大平台",children:[]},{level:3,title:"1.9 Java的主要特性",slug:"_1-9-java的主要特性",children:[]},{level:3,title:"1.10 JRE和JDK",slug:"_1-10-jre和jdk",children:[]}]}],git:{}}},5952:(a,n,s)=>{s.r(n),s.d(n,{default:()=>r});var e=s(6252);const p=(0,e.uE)('<h1 id="java基础" tabindex="-1"><a class="header-anchor" href="#java基础" aria-hidden="true">#</a> Java基础</h1><h2 id="_1-人机交互" tabindex="-1"><a class="header-anchor" href="#_1-人机交互" aria-hidden="true">#</a> 1. 人机交互</h2><h3 id="_1-1-什么是cmd" tabindex="-1"><a class="header-anchor" href="#_1-1-什么是cmd" aria-hidden="true">#</a> 1.1 什么是cmd？</h3><p>就是在windows操作系统中，利用命令行的方式去操作计算机。</p><p>我们可以利用cmd命令去操作计算机，比如：打开文件，打开文件夹，创建文件夹等。</p><h3 id="_1-2-如何打开cmd窗口" tabindex="-1"><a class="header-anchor" href="#_1-2-如何打开cmd窗口" aria-hidden="true">#</a> 1.2 如何打开CMD窗口？</h3><ol><li><p>按下快捷键：win + R。</p><pre><code> 此时会出现运行窗口。\n</code></pre></li><li><p>在运行窗口中输出cmd</p></li><li><p>输出回车。</p></li></ol><p>解惑：</p><p>​ cmd默认操作C盘下的users文件夹下的XXX文件夹。（XXX就是计算机名）</p><h3 id="_1-3-常用cmd命令" tabindex="-1"><a class="header-anchor" href="#_1-3-常用cmd命令" aria-hidden="true">#</a> 1.3 常用CMD命令</h3><p>扩展一个小点：</p><p>​ 在很多资料中都说成是DOS命令，其实是不对的。真正的DOS命令是1981年微软和IBM出品的MS-DOS操作系统中的命令才叫做DOS命令。</p><p>​ 而在Windows中，win98之前的操作系统是以非图形化的DOS为基础的，可以叫做DOS命令。到了2000年以后，windows逐渐的以图形化界面为主了，这个时候就不能叫DOS命令了，他只是模拟了DOS环境而已，很多的原本的DOS命令已经无法使用了，所以这个时候叫做CMD命令会更准确一些。</p><p>常见的CMD命令如下：</p><table><thead><tr><th>操作</th><th>说明</th></tr></thead><tbody><tr><td>盘符名称:</td><td>盘符切换。E:回车，表示切换到E盘。</td></tr><tr><td>dir</td><td>查看当前路径下的内容。</td></tr><tr><td>cd 目录</td><td>进入单级目录。cd itheima</td></tr><tr><td>cd ..</td><td>回退到上一级目录。</td></tr><tr><td>cd 目录1\\目录2...</td><td>进入多级目录。cd itheima\\JavaSE</td></tr><tr><td>cd \\</td><td>回退到盘符目录。</td></tr><tr><td>cls</td><td>清屏。</td></tr><tr><td>exit</td><td>退出命令提示符窗口。</td></tr></tbody></table><h3 id="_1-5-环境变量" tabindex="-1"><a class="header-anchor" href="#_1-5-环境变量" aria-hidden="true">#</a> 1.5 环境变量</h3><p>作用：</p><p>​ 如果我想要在CMD的任意目录下，都可以启动某一个软件，那么就可以把这个软件的路径配置到环境变量中的PATH里面。</p><p>​ 在启动软件的时候，操作系统会先在当前路径下找，如果在当前录课没有再到环境变量的路径中去找。如果都找不到就提示无法启动。</p><p>步骤：</p><ul><li>右键我的电脑，选择属性。</li><li>点击左侧的高级系统设置</li><li>选择高级，再点击下面的环境变量。</li><li>找系统变量里面的PATH</li><li>把软件的完整路径，配置到PATH当中就可以了。</li><li>（可做可不做）就是把自己配置的路径，移动到最上面。</li></ul><p>图解示例如下：</p><p>第一步：右键点击我的电脑并选择属性。</p><p>（如果无法出现第二步界面，可以打开我的电脑之后右键点击空白处）</p><p>第二步：点击高级系统设置。</p><p>第三步：选择高级，再点击下面的环境变量。</p><p>第四步：找系统变量里面的path</p><p>第五步：点击新建，把软件的完整路径，配置到PATH当中，再点击确定即可。</p><p>第六步：（可做可不做）点击上移，把当前配置的路径移动到最上面。</p><p>移动的好处：在CMD中打开软件时，会先找当前路径，再找环境变量，在环境变量中是从上往下依次查找的，如果路径放在最上面查找的速度比较快。</p><h2 id="_2-java概述" tabindex="-1"><a class="header-anchor" href="#_2-java概述" aria-hidden="true">#</a> 2. Java概述</h2><h3 id="_1-1-java是什么" tabindex="-1"><a class="header-anchor" href="#_1-1-java是什么" aria-hidden="true">#</a> 1.1 Java是什么？</h3><p>语言：人与人交流沟通的表达方式</p><p>计算机语言：人与计算机之间进行信息交流沟通的一种特殊语言</p><p>Java是一门非常火的计算机语言。（也叫做编程语言）</p><p>我们想要让计算机做一些事情，那么就可以通过Java语言告诉计算机就可以了</p><h3 id="_1-2下载和安装" tabindex="-1"><a class="header-anchor" href="#_1-2下载和安装" aria-hidden="true">#</a> 1.2下载和安装</h3><h4 id="_1-2-1-下载" tabindex="-1"><a class="header-anchor" href="#_1-2-1-下载" aria-hidden="true">#</a> 1.2.1 下载</h4><p>通过官方网站获取JDK</p>',39),t={href:"http://www.oracle.com/",target:"_blank",rel:"noopener noreferrer"},l=(0,e.Uk)("http://www.oracle.com"),i=(0,e.uE)('<p><strong>注意1</strong>：针对不同的操作系统，需要下载对应版本的JDK。</p><p><strong>注意2</strong>：</p><p>​ 如果你的电脑是windows32位的，建议重装系统，重装成64位的操作系统。</p><p>​ 因为Java从9版本开始，就已经不提供32位版本的安装包了。</p><p>​ 如果自己不愿意下载，到今天day01资料文件中，也有对应的安装包。</p><h4 id="_1-2-2-安装" tabindex="-1"><a class="header-anchor" href="#_1-2-2-安装" aria-hidden="true">#</a> 1.2.2 安装</h4><p>​ 傻瓜式安装，下一步即可。默认的安装路径是在C:\\Program Files下。</p><p>建议：</p><ul><li>安装路径不要有中文，不要有空格等一些特殊的符号。</li><li>以后跟开发相关的所有软件建议都安装在同一个文件夹中，方便管理。</li></ul><h4 id="_1-2-3-jdk的安装目录介绍" tabindex="-1"><a class="header-anchor" href="#_1-2-3-jdk的安装目录介绍" aria-hidden="true">#</a> 1.2.3 JDK的安装目录介绍</h4><table><thead><tr><th>目录名称</th><th>说明</th></tr></thead><tbody><tr><td>bin</td><td>该路径下存放了JDK的各种工具命令。javac和java就放在这个目录。</td></tr><tr><td>conf</td><td>该路径下存放了JDK的相关配置文件。</td></tr><tr><td>include</td><td>该路径下存放了一些平台特定的头文件。</td></tr><tr><td>jmods</td><td>该路径下存放了JDK的各种模块。</td></tr><tr><td>legal</td><td>该路径下存放了JDK各模块的授权文档。</td></tr><tr><td>lib</td><td>该路径下存放了JDK工具的一些补充JAR包。</td></tr></tbody></table><h4 id="_2-3-1-java程序开发运行流程" tabindex="-1"><a class="header-anchor" href="#_2-3-1-java程序开发运行流程" aria-hidden="true">#</a> 2.3.1 Java程序开发运行流程</h4><p>开发Java程序，需要三个步骤：编写程序，编译程序，运行程序。</p><h4 id="_2-3-2-helloworld案例的编写" tabindex="-1"><a class="header-anchor" href="#_2-3-2-helloworld案例的编写" aria-hidden="true">#</a> 2.3.2 HelloWorld案例的编写</h4><ol><li>新建文本文档文件，修改名称为HelloWorld.java。</li></ol><p><strong>注意</strong>：后缀名为java的才是java文件。</p><ol start="2"><li>用记事本打开HelloWorld.java文件，输写程序内容。</li></ol><p><strong>注意</strong>：代码要跟我编写的完全保持一致。</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">HelloWorld</span> <span class="token punctuation">{</span>\n\t<span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n\t\t<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;HelloWorld&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\t<span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><ol start="3"><li>保存</li></ol><p><strong>注意</strong>：未保存的文件在左上角会有*符号标记</p><ol start="4"><li><p>编译文件。编译后会产生一个class文件。</p><p>java文件：程序员自己编写的代码。</p><p>class文件：交给计算机执行的文件。</p></li><li><p>运行代码</p><p><strong>注意</strong>：运行的是编译之后的class文件。</p></li></ol><blockquote><p>用到两个命令：</p><p>​ javac + 文件名 + 后缀名 （就是编译java文件）</p><p>​ java + 文件名（运行编译之后的class文件）</p></blockquote><h3 id="_1-4-helloworld案例常见问题" tabindex="-1"><a class="header-anchor" href="#_1-4-helloworld案例常见问题" aria-hidden="true">#</a> 1.4 HelloWorld案例常见问题</h3><h4 id="_1-4-1-bug" tabindex="-1"><a class="header-anchor" href="#_1-4-1-bug" aria-hidden="true">#</a> 1.4.1 BUG</h4><p>​ 在电脑系统或程序中，隐藏着的一些未被发现的缺陷或问题统称为bug（漏洞）。</p><h4 id="_1-4-2-bug的解决" tabindex="-1"><a class="header-anchor" href="#_1-4-2-bug的解决" aria-hidden="true">#</a> 1.4.2 BUG的解决</h4><ol><li>具备识别BUG的能力：多看</li><li>具备分析BUG的能力：多思考，多查资料</li><li>具备解决BUG的能力：多尝试，多总结</li></ol><h4 id="_1-4-3-helloworld常见问题" tabindex="-1"><a class="header-anchor" href="#_1-4-3-helloworld常见问题" aria-hidden="true">#</a> 1.4.3 HelloWorld常见问题</h4><p>1、非法字符问题。Java中的符号都是英文格式的。</p><p>2、大小写问题。Java语言对大小写敏感（区分大小写）。</p><p>3、在系统中显示文件的扩展名，避免出现HelloWorld.java.txt文件。</p><p>4、编译命令后的java文件名需要带文件后缀.java</p><p>5、运行命令后的class文件名（类名）不带文件后缀.class</p><p>...</p><h4 id="常见错误代码1" tabindex="-1"><a class="header-anchor" href="#常见错误代码1" aria-hidden="true">#</a> 常见错误代码1：</h4><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code>publicclass <span class="token class-name">HelloWorld</span><span class="token punctuation">{</span>\n    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span><span class="token punctuation">{</span>\n        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;HelloWorld&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p>问题：</p><p>​ public和class之间缺少一个空格。</p><p>技巧：一般来讲在单词之间的空格是不能省略的。</p><p>​ 如果是单词和符号之间的空格是可以省略的。</p><h4 id="常见错误代码2" tabindex="-1"><a class="header-anchor" href="#常见错误代码2" aria-hidden="true">#</a> 常见错误代码2：</h4><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">HelloWorld</span><span class="token punctuation">{</span>\n    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span><span class="token punctuation">{</span>\n        system<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;HelloWorld&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p>问题：</p><p>​ system首字母必须大写。</p><p>技巧：</p><p>​ Java代码中，是严格区分大小写的。</p><p>​ 所以该大写的地方一定要大写，该小写的地方一定要小写。多多练习。</p><h4 id="常见错误代码3" tabindex="-1"><a class="header-anchor" href="#常见错误代码3" aria-hidden="true">#</a> 常见错误代码3：</h4><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">HelloWorld</span><span class="token punctuation">{</span>\n    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span><span class="token punctuation">{</span>\n        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token class-name">HelloWorld</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p>问题：</p><p>​ 第三行代码中的HelloWorld必须用双引号引起来，否则就会出现问题。</p><h4 id="常见错误代码4" tabindex="-1"><a class="header-anchor" href="#常见错误代码4" aria-hidden="true">#</a> 常见错误代码4：</h4><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">HelloWorld</span><span class="token punctuation">{</span>\n    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span><span class="token punctuation">{</span>\n        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;HelloWorld&quot;</span><span class="token punctuation">)</span>；\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p>问题：</p><p>​ 在以后代码当中，所有的标点符号必须是英文状态下的。</p><p>技巧：</p><p>​ 可以在输入法中进行对应的设置。</p><h3 id="_1-5-环境变量-1" tabindex="-1"><a class="header-anchor" href="#_1-5-环境变量-1" aria-hidden="true">#</a> 1.5 环境变量</h3><h4 id="_1-5-1-为什么配置环境变量" tabindex="-1"><a class="header-anchor" href="#_1-5-1-为什么配置环境变量" aria-hidden="true">#</a> 1.5.1 为什么配置环境变量</h4><p>​ 开发Java程序，需要使用JDK提供的开发工具（比如javac.exe、java.exe等命令），而这些工具在JDK的安装目录的bin目录下，如果不配置环境变量，那么这些命令只可以在bin目录下使用，而我们想要在任意目录下都能使用，所以就要配置环境变量。</p><p>注意：现在最新从官网上下载的JDK安装时会自动配置javac、java命令的路径到Path环境变量中去 ，所以javac、java可以直接使用。</p><h4 id="_1-5-2配置方式" tabindex="-1"><a class="header-anchor" href="#_1-5-2配置方式" aria-hidden="true">#</a> 1.5.2配置方式</h4><p>以前下载的老版本的JDK是没有自动配置的，而且自动配置的也只包含了4个工具而已，所以我们需要删掉已经配置完毕的，再次重新配置Path环境变量。</p><p>①<strong>JAVA_HOME</strong>：告诉操作系统JDK安装在了哪个位置（未来其他技术要通过这个找JDK）</p><p>②<strong>Path</strong>：告诉操作系统JDK提供的javac(编译)、java(执行)命令安装到了哪个位置</p><h3 id="_1-6-java语言的发展" tabindex="-1"><a class="header-anchor" href="#_1-6-java语言的发展" aria-hidden="true">#</a> 1.6 Java语言的发展</h3><p>三个版本：</p><ul><li>Java5.0：这是Java的第一个大版本更新。</li><li>Java8.0：这个是目前绝大数公司正在使用的版本。因为这个版本最为稳定。</li><li>Java15.0：这个是我们课程中学习的版本。</li></ul><p>解惑：</p><p>​ 我们学的跟工作中使用的版本不太一样啊。会不会影响以后工作呢？</p><p>向下兼容。新的版本只是在原有的基础上添加了一些新的功能而已。</p><p>举例：</p><p>用8版本开发的代码，用11版本能运行吗？必须可以的。</p><p>用11版本开发的代码，用8版本能运行吗？不一定。</p><p>如果11版本开发的代码，没有用到9~11的新特性，那么用8是可以运行的。</p><p>如果11版本开发的代码，用到了9~11的新特性，那么用8就无法运行了。</p><h3 id="_1-8-java的三大平台" tabindex="-1"><a class="header-anchor" href="#_1-8-java的三大平台" aria-hidden="true">#</a> 1.8 Java的三大平台</h3><p>​ JavaSE、JavaME、JavaEE</p><h4 id="_1-8-1-javase" tabindex="-1"><a class="header-anchor" href="#_1-8-1-javase" aria-hidden="true">#</a> 1.8.1 JavaSE</h4><p>​ 是其他两个版本的基础。</p><h4 id="_1-8-2-javame" tabindex="-1"><a class="header-anchor" href="#_1-8-2-javame" aria-hidden="true">#</a> 1.8.2 JavaME</h4><p>​ Java语言的小型版，用于嵌入式消费类电子设备或者小型移动设备的开发。</p><p>​ 其中最为主要的还是小型移动设备的开发（手机）。渐渐的没落了，已经被安卓和IOS给替代了。</p><p>​ 但是，安卓也是可以用Java来开发的。</p><h4 id="_1-8-3-javaee" tabindex="-1"><a class="header-anchor" href="#_1-8-3-javaee" aria-hidden="true">#</a> 1.8.3 JavaEE</h4><p>​ 用于Web方向的网站开发。（主要从事后台服务器的开发）</p><p>​ 在服务器领域，Java是当之无愧的龙头老大。</p><h3 id="_1-9-java的主要特性" tabindex="-1"><a class="header-anchor" href="#_1-9-java的主要特性" aria-hidden="true">#</a> 1.9 Java的主要特性</h3><ul><li>面向对象</li><li>安全性</li><li>多线程</li><li>简单易用</li><li>开源</li><li>跨平台</li></ul><h4 id="_1-9-1-java语言跨平台的原理" tabindex="-1"><a class="header-anchor" href="#_1-9-1-java语言跨平台的原理" aria-hidden="true">#</a> 1.9.1 Java语言跨平台的原理</h4><ul><li>操作系统本身其实是不认识Java语言的。</li><li>但是针对于不同的操作系统，Java提供了不同的虚拟机。</li></ul><p>虚拟机会把Java语言翻译成操作系统能看得懂的语言。</p><h3 id="_1-10-jre和jdk" tabindex="-1"><a class="header-anchor" href="#_1-10-jre和jdk" aria-hidden="true">#</a> 1.10 JRE和JDK</h3><p>JVM（Java Virtual Machine），Java虚拟机</p><p>JRE（Java Runtime Environment），Java运行环境，包含了JVM和Java的核心类库（Java API）</p><p>JDK（Java Development Kit）称为Java开发工具，包含了JRE和开发工具</p><p>总结：我们只需安装JDK即可，它包含了java的运行环境和虚拟机。</p>',98),c={},r=(0,s(3744).Z)(c,[["render",function(a,n){const s=(0,e.up)("ExternalLinkIcon");return(0,e.wg)(),(0,e.iD)(e.HY,null,[p,(0,e._)("p",null,[(0,e._)("a",t,[l,(0,e.Wm)(s)])]),i],64)}]])}}]);